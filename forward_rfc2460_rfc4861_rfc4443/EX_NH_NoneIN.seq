#!/usr/bin/perl
#
# Copyright (C) 2013, 2014, 2015
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: EX_NH_NoneIN.seq,v 1.2 2015/04/29 weifen Exp $
#
######################################################################
BEGIN {
	$V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_2 $';
}

use V6evalTool;
use CommonSPEC;
use lib '../';
use CPE6_config;
use DHCPv6_common;

if ($V6evalTool::NutDef{'Type'} ne 'router') {
    vLogHTML("This test is for the router only<BR>");
    exit($V6evalTool::exitRouterOnly);
}



$pktdesc{'echo_request_to_link0'}	= 'Send Echo Request to Link0 '.
						'(No Next Header after '.
						'Destination Options Header)';
$pktdesc{'echo_request_from_link1'}	= 'Recv forwarded Echo Request '.
						'from Link1 '.
						'(No Next Header after '.
						'Destination Options Header)';

$endStatus = $V6evalTool::exitPass;
$IF0 = 'Link0';
$IF1 = 'Link1';

vCapture($IF0);
vCapture($IF1);


#----- test
my $ra = $STATEFUL_CLIENT ? 'ra_MsetOset' : 'ra_MclearOset';
my ($ret,$tn2_prefix) = cpe_initialization($ra,$IF0,$IF1,$STATEFUL_CLIENT,0);
if ($ret != 0) {
    vLogHTML('<FONT COLOR="#FF0000">CPE initialization fail!</FONT><BR>');
    dhcpExitFail();
}
if ($tn2_prefix =~ /3ffe:501:ffff/ ) {
    vLogHTML("<B>RA includes the global prefix($tn2_prefix).</B></BR>");
} else {
	vLogHTML('<FONT COLOR="#FF0000">Did not get golbal prefix from RA!</FONT><BR>');
  dhcpExitFail();
}

vClear($IF0);
vClear($IF1);

vCPP("-D\'PREFIX_FROM_PD=\"$tn2_prefix\"\' ");
vSend($IF1, 'echo_request_to_link0');

%ret = vRecv($IF0, 5 ,0 ,0, 'echo_request_from_link1','ns_nut_lla_to_any_tn1_ga');
if ($ret{'status'} == 0) {
  if ($ret{'recvFrame'} eq 'echo_request_from_link1') {
    vLogHTML('OK<BR>');
  } elsif ($ret{'recvFrame'} eq 'ns_nut_lla_to_any_tn1_ga'){
    vLogHTML('Receive NS from CE-Router.Send NA.<BR>');
    vSend($IF0, 'na_tn1_to_nut');
    %ret1 = vRecv($IF0, 5 ,0 ,0, 'echo_request_from_link1');
    if ($ret1{'status'} == 0) {
      vLogHTML('OK<BR>');
    } else {
	vLogHTML('Cannot receive forwarded Echo Request<BR>');
	vLogHTML('<FONT COLOR="#FF0000">NG</FONT><BR>');
	$endStatus = $V6evalTool::exitFail;
    }
  }
} else {
  vLogHTML('Cannot receive forwarded Echo Request<BR>');
  vLogHTML('<FONT COLOR="#FF0000">NG</FONT><BR>');
  $endStatus = $V6evalTool::exitFail;
}

vStop($IF0);

vStop($IF1);

vRemote('reboot.rmt','');

exit($endStatus);
#----- end test

######################################################################
__END__

=head1 NAME

  No Next Header after Extension Header

=head1 TARGET

  CE-Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./EX_NH_NoneIN.seq">EX_NH_NoneIN.seq</A> [-tooloption ...] -pkt <A HREF="./EX_NH_NoneIN.def">EX_NH_NoneIN.def</A>
    -tooloption : v6eval tool option
</PRE>

=end html

=head1 INITIALIZATION

  Common Test Setup is performed at the beginning of this test part.

=head1 TEST PROCEDURE

Verify proper behavior of a node when it encounters a Next Header value of 59 (no next header).

   TN2                      CE-Router                      TN1
              (Link1)                     (Link0)
    |                           |                           |
    |-------------------------->|                           |
    |   Echo Request to Link1   |                           |
    |                           |                           |
    |                           |-------------------------->|
    |                           |   Echo Request to Link0   |
    |                           |                           |
    v                           v                           v

  1. TN2 transmits an Echo Request with a first hop through the CE-Router.
     The Echo Request contains a Destination Options header with a Next Header of 59.
     Following the Destination Options header is an ICMPv6 Echo Request header.
  2. Observe the packets transmitted by the CE-Router on Link0.

  Test Packet to Target Data is:

        IPv6 Header
            Version            = 6
            Traffic Class      = 0
            FlowLabel          = 0
            PayloadLength      = 32
            NextHeader         = 60 (Destination Options Header)
            SourceAddress      = TN2 Address
            DestinationAddress = TN1 Address

        Destination Options Header
            NextHeader      = 59 (None)
            HeaderExtLength = 0
            OptionType      = 1 (PadN)
            OptDataLength   = 4
            pad             = {0, 0, 0, 0}

        ICMP Echo Request
            Type           = 128 (Echo Request)
            Code           = 0
            Checksum       = (auto)
            Identifier     = 0xffff
            SequenceNumber = 1
            PayloadData    = {1, 2, 3, 4, 5, 6, 7, 8}

=head1 JUDGEMENT

  PASS: The CE-Router should forward the Echo Request to TN1 on Link0.
        The octets past the end of the header whose Next Header field contains 59 must be unchanged.

        IPv6 Header
            Version            = 6
            Traffic Class      = 0
            FlowLabel          = 0
            PayloadLength      = 32
            NextHeader         = 60 (Destination Options Header)
            SourceAddress      = TN2 Address
            DestinationAddress = TN1 Address

        Destination Options Header
            NextHeader      = 59 (None)  <= must be unchanged
            HeaderExtLength = 0
            OptionType      = 1 (PadN)
            OptDataLength   = 4
            pad             = {0, 0, 0, 0}

        ICMP Echo Request                <= must be unchanged
            Type           = 128 (Echo Request)
            Code           = 0
            Checksum       = (auto)
            Identifier     = 0xffff
            SequenceNumber = 1
            PayloadData    = {1, 2, 3, 4, 5, 6, 7, 8}

=head1 CLEANUP

Common Test Cleanup

=cut

# =head1 REFERENCE
# 
# RFC2460
# 
# 4.7 No Next Header
# 
#    The value 59 in the Next Header field of an IPv6 header or any
#    extension header indicates that there is nothing following that
#    header.  If the Payload Length field of the IPv6 header indicates the
#    presence of octets past the end of a header whose Next Header field
#    contains 59, those octets must be ignored, and passed on unchanged if
#    the packet is forwarded.
# 

=pod

=head1 REFERENCE

=begin html
<BLOCKQUOTE>
<PRE>
[RFC 7084],G-1
[RFC 2460],Section 4.7
</PRE>
</BLOCKQUOTE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut

