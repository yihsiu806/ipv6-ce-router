#!/usr/bin/perl
#
# Copyright (C) 2013
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: To_ICMPErr_Parameter_Problem.seq,v 1.1 2014/07/17 weifen Exp $
########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_2 $'; }
use V6evalTool;
use lib '../';
use CPE6_config;
use DHCPv6_common;


$IF0 = 'Link0';
$IF1 = 'Link1';

%pktdesc = (
    echo_request	=> 'Send Echo Request',
    echo_reply		=> 'Receive Echo Reply',
	parameter_problem	=> 'Send Parameter Problem Message',
    time_exceeded	=> 'Receive ICMP Error',
);

#
#
#
vLogHTML("<FONT SIZE=\"+1\">Initialization</FONT><BR>");

vCapture($IF0);
vCapture($IF1);
my $ra = $STATEFUL_CLIENT ? 'ra_MsetOset' : 'ra_MclearOset';
my ($ret,$tn2_prefix) = cpe_initialization($ra,$IF0,$IF1,$STATEFUL_CLIENT,0);
if ($ret != 0) {
    vLogHTML('<FONT COLOR="#FF0000">CPE initialization fail!</FONT><BR>');
    dhcpExitFail();
}

if ($tn2_prefix =~ /3ffe:501:ffff/ ) {
    vLogHTML("<B>RA includes the global prefix($tn2_prefix).</B></BR>");
} else {
	vLogHTML('<FONT COLOR="#FF0000">Did not get golbal prefix from RA!</FONT><BR>');
  dhcpExitFail();
}

vClear($IF0);
vClear($IF1);

#
#
#
vLogHTML("<FONT SIZE=\"+1\">Test</FONT><BR>");
vCPP("-D\'PREFIX_FROM_PD=\"$tn2_prefix\"\' ");

vSend($IF1, 'parameter_problem');

%ret = vRecv($IF1, 5 ,0 ,0, 'time_exceeded','ns_nut_lla_to_any_tn2_ga');
if ($ret{'status'} == 0) {
  if ($ret{'recvFrame'} eq 'time_exceeded') {
    vLogHTML('<FONT COLOR="#FF0000">TN receive ICMPv6 error message from CE-Router</FONT><BR>');
    vStop($IF0);
    vStop($IF1);
    exit($V6evalTool::exitWarn);
  } elsif ($ret{'recvFrame'} eq 'ns_nut_lla_to_any_tn2_ga'){
    vLogHTML('Receive NS from CE-Router.Send NA.<BR>');
    vSend($IF1, 'na_tn2_to_nut');
    %ret1 = vRecv($IF1, 5 ,0 ,0, 'time_exceeded');
    if ($ret1{'status'} == 0) {
      vLogHTML('<FONT COLOR="#FF0000">TN receive ICMPv6 error message from CE-Router</FONT><BR>');
      vStop($IF0);
      vStop($IF1);
      vRemote('reboot.rmt','');
      exit($V6evalTool::exitWarn);
    } else {
      vLog("TN do not receive ICMPv6 error message from CE-Router");
      vLog("OK");
    }
  }
} else {
  vLog("TN do not receive ICMPv6 error message from CE-Router");
  vLog("OK");
}

vStop($IF0);
vStop($IF1);

vRemote('reboot.rmt','');

exit($V6evalTool::exitPass);
########################################################################
__END__

=head1 NAME

	Error Condition With ICMPv6 Error Message
	Part F: Reception of Flawed Parameter Problem with Hop Limit = 0

=head1 TARGET

	Router

=head1 SYNOPSIS

	To_ICMPErr_Parameter_Problem.seq [-tooloption ...] -p To_ICMPErr_Parameter_Problem.def


=head1 INITIALIZATION

	Common Test Setup is performed at the beginning of this test part.

=head1 TEST PROCEDURE

Verify that a router properly handles the reception and processing of an ICMPv6 Error Message that invokes an error.


	This test verifies that the message processing rule ,
	
    (e) An ICMPv6 error message MUST NOT be sent as a result of
        receiving:

         (e.1) an ICMPv6 error message, or


	TN2			           CE-Router

	-------------------------------------

	1.
	 === ICMPv6  Parameter Problem  ===>
                src address : TN2 global address
                dst address : Off-link address
                code        : 0           
                hop limit   : 0

	2.
	<< JUDGEMENT >>

	 <=== No packets ===


=head1 JUDGEMENT


    << PASS >>
    The CE-Router must not send a Time Exceeded Error message with Code 0
    to TN2 when it receives a Parameter Problem Message 
    that contains a Hop Limit of 0.

=head1 CLEANUP

Common Test Cleanup

=cut

# =head1 REFERENCE
# 
# RFC2463
# 2.4 Message Processing Rules
# 
#    Implementations MUST observe the following rules when processing
#    ICMPv6 messages (from [RFC-1122]):
# 
# =begin html
# <pre>
#     <b>(e) An ICMPv6 error message MUST NOT be sent as a result of
#         receiving:<br>
#          (e.1) an ICMPv6 error message</b>, or
# </pre>
# 
# =end html
# 

=pod

=head1 REFERENCE

=begin html
<BLOCKQUOTE>
<PRE>
[RFC 7084],G-1
[RFC 4443],Section 2.4
</PRE>
</BLOCKQUOTE>

=end html

=head1 SEE ALSO

	  perldoc V6evalTool

=cut
