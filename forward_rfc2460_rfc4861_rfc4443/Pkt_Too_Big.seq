#!/usr/bin/perl
#
# Copyright (C) 2013, 2014, 2015, 2016
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: Pkt_Too_Big.seq,v 1.4 2016/05/10 weifen Exp $
########################################################################

BEGIN { $V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_2 $'; }

use V6evalTool;

use lib '../';
use CPE6_config;
use DHCPv6_common;

dhcpExitNS if(!($MTU));

# Interface 
$IF0 = 'Link0';
$IF1 = 'Link1';

%pktdesc = (
	echo_request_1500_link0	=> 'Send Echo Request w/ 1500 bytes (Link0)',
	pkt_too_big_link0	=> 'Receive Packet Too Big Message (MTU = 1280)',
);



vLogHTML("<FONT SIZE=\"+1\">Initialization</FONT><BR>");

vCapture($IF0);
vCapture($IF1);
my $ra = $STATEFUL_CLIENT ? 'ra_MsetOset_local' : 'ra_MclearOset_local';
my ($ret,$tn2_prefix) = cpe_initialization($ra,$IF0,$IF1,$STATEFUL_CLIENT,0);
if ($ret != 0) {
    vLogHTML('<FONT COLOR="#FF0000">CPE initialization fail!</FONT><BR>');
    dhcpExitFail();
}
if ($tn2_prefix =~ /3ffe:501:ffff/ ) {
    vLogHTML("<B>RA includes the global prefix($tn2_prefix).</B></BR>");
} else {
	vLogHTML('<FONT COLOR="#FF0000">Did not get golbal prefix from RA!</FONT><BR>');
  dhcpExitFail();
}

vClear($IF0);
vClear($IF1);
vCPP("-D\'PREFIX_FROM_PD=\"$tn2_prefix\"\' ");
#----------------------------------------------------------------------#
# Procedure                                                            #
#----------------------------------------------------------------------#
vLogHTML("<FONT SIZE=\"+1\">Procedure:</FONT><BR>");

%ret1 = vSend($IF1, echo_request_tn2_1500);

%ret = vRecv($IF1, 5 ,0 ,0, 'pkt_too_big_link1_any','ns_nut_lla_to_any_tn2_ga');
if ($ret{'status'} == 0) {
  if ($ret{'recvFrame'} eq 'pkt_too_big_link1_any') {
    vLogHTML('OK<BR>');
    vLog("TN received Packet Too Big Message.");
  } elsif ($ret{'recvFrame'} eq 'ns_nut_lla_to_any_tn2_ga'){
    vLogHTML('Receive NS from CE-Router.Send NA.<BR>');
    vSend($IF1, 'na_tn2_to_nut');
    %ret1 = vRecv($IF1, 5 ,0 ,0, 'pkt_too_big_link1_any');
    if ($ret1{'status'} == 0) {
      vLogHTML('OK<BR>');
      vLog("TN received Packet Too Big Message.");
    } else {
			vLogHTML('<FONT COLOR="#FF0000">TN receive unexpected packets from CE-Router</FONT><BR>');
			goto error;
    }
  }
} else {
  vLogHTML('<FONT COLOR="#FF0000">TN receive unexpected packets from CE-Router</FONT><BR>');
  goto error;
}

vStop($IF0);
vStop($IF1);
vRemote('reboot.rmt','');
exit($V6evalTool::exitPass);


error:	
vLogHTML('<FONT COLOR="#FF0000">FAIL</FONT><BR>');
vStop($IF0);
vStop($IF1);
vRemote('reboot.rmt','');
exit($V6evalTool::exitFail);

#----------------------------------------------------------------------#


########################################################################
__END__

=head1 NAME

	Packet Too Big Message Generation

=head1 TARGET

	Router

=head1 SYNOPSIS

	Pkt_Too_Big.seq [-tooloption ...] -p Pkt_Too_Big.def

=head1 NETWORK CONFIGURATION

   TN2                      CE-Router                      TN1
              (Link1)                     (Link0)
    |                           |                           |
    |-------------------------->|                           |
    |       Echo Request        |                           |
    |    (packet size = 1460)   |                           |
    |                           |                           |
    |<------------------------- |                           |
    |   ICMPv6 Packet Too Big   |                           |
    |                           |                           |
    v                           v                           v

=head1 INITIALIZATION

	Common Test Setup is performed at the beginning of this test part.

	And status of Neighbor Cache Entry for TN2's addresses are reachable.

=head1 TEST PROCEDURE

Verify that a router propely generates Packet Too Big Message

	This test verifies that the node sends a Packet Too Big Message 
	in response to a packet that it can not forward because the packet 
	is larger than the MTU of the outgoing link.

	TN2			CE-Router

	---------------------------

	1.
	After CE-Router is initialized (set static route) , CE-Router sets 
	the Link MTU of LINK0 Interface to 1280 .

	2.
	TN2 send Echo Request to TN1.

	 === echo request  ===>
		src address : TN2 global address
		dst address : TN1 global address
		PayloadLength : 1460

	3.
	CE-Router send Packet Too Big Message 

	 <=== Packet Too Big Message ===

=head1 JUDGEMENT

    << PASS >>
    The CE-Router must transmit a Packet Too Big messge to TN2, 
    as it could not forward the Echo Request due to PMTU limitations.
         - The MTU field of Packet Too Big Message should be set to 1280.
         - The Source Address of the Packet should be one of the CE-Router's unicast addresses
         - The Destination Address should be the same as the Source Address in TN2's Echo Request packet.
           The Code field should be st to "0".
         - The invoking Echo Request packet included in the Error Message must not exceed minimum IPv6 MTU.

=head1 CLEANUP

Common Test Cleanup

=cut

# =head1 REFERENCE
# 
# RFC2463
# 3.2 Packet Too Big Message
# 
#        0                   1                   2                   3
#        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
#       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#       |     Type      |     Code      |          Checksum             |
#       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#       |                             MTU                               |
#       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#       |                    As much of invoking packet                 |
#       +               as will fit without the ICMPv6 packet           +
#       |               exceeding the minimum IPv6 MTU [IPv6]           |
# 
#    IPv6 Fields:
# 
# =begin html
# <pre>
#    <b>Destination Address</b><br>
#                   <b>Copied from the Source Address field of the invoking
#                   packet.</b>
# </pre>
# 
# =end html
# 
#    ICMPv6 Fields:
# 
# =begin html
# <pre>
#    <b>Type           2</b>
# </pre>
# 
# =end html
# 
# =begin html
# <pre>
#    <b>Code</b>           <b>Set to 0 (zero) by the sender and ignored by the</b>
#                   <b>receiver</b>
# </pre>
# 
# =end html
# 
#    MTU            The Maximum Transmission Unit of the next-hop link.
# 
#   Description
# 
# =begin html
# <pre>
#    <b>A Packet Too Big MUST be sent by a router in response to a packet
#    that it cannot forward because the packet is larger than the MTU of
#    the outgoing link.</b>  The information in this message is used as part
#    of the Path MTU Discovery process [PMTU].
# </pre>
# 
# =end html
# 
#    Sending a Packet Too Big Message makes an exception to one of the
#    rules of when to send an ICMPv6 error message, in that unlike other
#    messages, it is sent in response to a packet received with an IPv6
#    multicast destination address, or a link-layer multicast or link-
#    layer broadcast address.
# 

=pod

=head1 REFERENCE

=begin html
<BLOCKQUOTE>
<PRE>
[RFC 7084],W-1
</PRE>
</BLOCKQUOTE>

=end html

=head1 SEE ALSO

	  perldoc V6evalTool
	  perldoc V6evalRemote

=cut
