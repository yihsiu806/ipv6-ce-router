#!/usr/bin/perl
#
# Copyright (C) 2013
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: S_RFC3646_3_DNSOP_for_Advertise.seq,v 1.0 2013/08/19 weifen Exp $
########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_2 $';
}

use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use CPE6_config;
use Server_pktdesc;

dhcpExitNS if(!($STATEFUL_SERVER));

#--------------------------------------------------------------#
# Initialization
#--------------------------------------------------------------#

vLogHTML('<B>==== NUT Initialization ====</B><BR>');
my $IF0 = "Link0";
my $IF1 = "Link1";

vCapture($IF0);
vCapture($IF1);
my $ra = $STATEFUL_CLIENT ? 'ra_MsetOset' : 'ra_MclearOset';
my ($ret,$tn2_prefix) = cpe_initialization($ra,$IF0,$IF1,$STATEFUL_CLIENT,1);
if ($ret != 0) {
    vLogHTML('<FONT COLOR="#FF0000">CPE initialization fail!</FONT><BR>');
    dhcpExitFail();
}

vClear($IF0);
vClear($IF1);

# 1 send Solicit
ResetDhcpOpt();
$CID_OPTION = "opt_CID_LLT_client1";
$IA_NA_OPTION = "opt_IA_NA";
$ElapsedTime_OPTION = "opt_ElapsedTime";
$OptionRequest_OPTION = "opt_ORO_dns_servers";
my ($ret1, %sol1) = send_solicit($IF1, "solicit_client1_to_alldhcp", "");
if (0 != $ret1){
	dhcpExitFail();
}


# 2. wait for DHCPv6 Advertise Message
my ($ret2, %adv2) = wait_for_advertise($IF1, 5);
if (0 != $ret2){
 	dhcpExitFail();
}

if (0 != options_exist(\%adv2, ($CMP_DNS_SVR|$CMP_CID|$CMP_SID))){
	dhcpExitError("<B>Do not include necessary options!</B>");
}

# compare CID
dhcpExitFail() if (0 != compare_options(\%sol1, \%adv2, ($CMP_CID|$CMP_TRANS_ID))
);

# check unicast address
if ( $adv2{"Frame_Ether.Packet_IPv6.Hdr_IPv6.DestinationAddress"} != $sol1{"Frame
_Ether.Packet_IPv6.Hdr_IPv6.SourceAddress"}) {
        dhcpExitError("DHCPv6 Server not send Advertise message via unicast.");
}

my $option_base = "Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_Advertise.Opt_DHCPv6_DNS_Servers";
my $option_code = $option_base."."."Code";
my $option_len = $option_base."."."Length";
my $option_addr = $option_base."."."Address";


if(defined $adv2{$option_base}){
	vLogHTML("<B> DNS Recursive Name Server option Code = $adv2{$option_code} <B><BR>");
	vLogHTML("<B> DNS Recursive Name Server option Length = $adv2{$option_len} <B><BR>");
	vLogHTML("<B> DNS Recursive Name Server option Address = $adv2{$option_addr} <B><BR>");
}
else{
	vLogHTML("<B> NO DNS Recursive Name Server option <B><BR>");
	dhcpExitFail;
}
## 3 send Request  (w/option request) 
#$CID_OPTION = "opt_CID_LLT_client1";
#$SID_OPTION = "opt_SID_ANY";
#$IA_NA_OPTION = "opt_IA_NA";
#$OptionRequest_OPTION = "opt_ORO_dns_servers";
#my ($ret3, %req3) = send_request($IF0, "request_client1_to_alldhcp", \%adv2, "");
# if (0 != $ret3) {
#	dhcpExitFail() 
#}

# 4.wait for DHCPv6 Reply Message
#my ($ret4, %rep4) = wait_for_reply($IF0, 5);
# if (0 != $ret4){
#	dhcpExitFail();
#}

#Check option
# if (0 != options_exist(\%rep4, ($CMP_DNS_SVR|$CMP_CID|$CMP_SID))){
#	 dhcpExitError("<B>Do not include necessary options!</B>");
# }

#-------------------------------------------------------------------
vLogHTML("<B><FONT COLOR=#006666>The Format of DNS Recursive Name Server option is correct</FONT></B><BR>");
#-------------------------------------------------------------------

vClear($IF0);
vClear($IF1);
vStop($IF0);
vStop($IF1);
dhcpExitPass();
 
#NOTREACHED

########################################################################
__END__

=head1 NAME

  Transmission of Advertise Messages
  Part D: Advertise message with ORO (DNS Recursive Name Server option)

=head1 TARGET

  CE-Router

=head1 SYNOPSIS

=begin html
 <PRE>
 <A HREF="./S_RFC3646_3_DNSOP_for_Advertise.seq">S_RFC3646_3_DNSOP_for_Advertise.seq </A>[-tooloption ...]
 -pkt <A HREF="./S_RFC3646_3_DNSOP_for_Advertise.def">S_RFC3646_3_DNSOP_for_Advertise.def </A>
 -tooloption: v6eval tool option
See Also <A HREF="../DHCPv6.def"> DHCPv6.def </A>
 </PRE>

=head1 INITIALIZATION

	Common Test Setup 1.1 is performed at the beginning of this test part.
	
=begin html
  <UL>
  <LI><STRONG>Network Topology</STRONG></LI>
  </UL>
  <PRE>
          TN(Server)  
	     |
Link0 -------+-----------+--------------- 3ffe:501:ffff:100::/64
                         |
                       NUT(Server1)
                         |
Link1 -------+-----------+--------------- 3ffe:501:ffff:111x::/64
	     |
          TN(Client1)
  </PRE>
  <UL>
      <LI><STRONG>Verification Points</STRONG></LI>
  <UL>
      <PRE>
Destination address set to TN's unicast address same as the Solicit message's source adderess<BR><BR>
Advertise Message
        <li>msg-type</li>
        <b>ADVERTISE(2)</b>
        <li>transaction-id</li>
        Same as the Solicit Message
        <li>Server Identifier option</li>
        Any
        <li>Client Identifier option</li>
        Same as the Solicit Message
        <li>DNS Recursive Name Server option 
<ul>
      <LI>option-code</LI>
      <B>OPTION_DNS_SERVERS (23)</B>
      <LI>option-len</LI>
      Length of the list of DNS recursive name servers in octets; 
      <B>must be a multiple of 16</B>
      <LI>DNS-recursive-name-server</LI>
      Any(IPv6 address of DNS recursive name server)
    </ul>
      </PRE>
  </UL>
  </UL>
  <UL>
      <LI><STRONG>Configuration</STRONG></LI>
      <UL>
      <PRE>
      TN send Request message with Option Request option
      <LI>option-code</LI>
      <B>OPTION_ORO(6)</B>
      <LI>request-option-code</LI>
      <B>OPTION_DNS_SERVERS (23)</B>
      </PRE>
      </UL>
	<BLOCKQUOTE>
	<TABLE BORDER>
	<TR>
	<TD><TT>Device Name</TT></TD>
	<TD><TT>Device Type</TT></TD>
	<TD><TT>I/F</TT></TD>
	<TD><TT>Assigned Prefix</TT></TD>
	<TD><TT>Link Local Addr</TT></TD>
	<TD><TT>MAC Addr</TT></TD>
	</TR>
	<TR>
	<TD><TT>Server1</TT></TD>
	<TD><TT>NUT</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:111x::/64</TT></TD>
	<TD><TT>NUT's Linklocal address</TT></TD>
	<TD><TT>NUT's MAC address</TT></TD>
	</TR>
	<TR>
	<TD><TT>Client1</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:111x::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a2a2</TT></TD>
	<TD><TT>00:00:00:00:a2:a2</TT></TD>
	</TABLE>
	</BLOCKQUOTE>
	</UL>
</UL>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
    TN2(Link1)	NUT     TR(Link0)
	   |	       |       | 
	   |         | <---> | CE initialization (provide RA and DHCP informaiton to NUT)
		 |	       |       | 
     |	---->  |       | Solicit       (w/ Option Request option)
     |	<----  |       | Advertise	(*1)
     |         |       |	 
</PRE>

=end html

=head1 JUDGEMENT

<PRE>
(*1)PASS:  NUT sends Advertise message that is same as the description of verification points.
</PRE>

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
[RFC 7084],L-8, L-10
[RFC 3315] 17.2.2
[RFC 3646],Section 3 and 4
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut
