#!/usr/bin/perl
#
# Copyright (C) 2013
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: S_RFC3315_18.2.6_NobindingStutusCodeOpReceiptDeclineMsg.seq,v 1.0 2013/08/19 weifen Exp $
########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_1 $';
}

use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use CPE6_config;
use Server_pktdesc;

dhcpExitNS if(!($STATEFUL_SERVER));
#--------------------------------------------------------------#
# Initialization
#--------------------------------------------------------------#

vLogHTML('<B>==== NUT Initialization ====</B><BR>');
my $IF0 = "Link0";
my $IF1 = "Link1";

vCapture($IF0);
vCapture($IF1);
my $ra = $STATEFUL_CLIENT ? 'ra_MsetOset' : 'ra_MclearOset';
my ($ret,$tn2_prefix) = cpe_initialization($ra,$IF0,$IF1,$STATEFUL_CLIENT,0);
if ($ret != 0) {
    vLogHTML('<FONT COLOR="#FF0000">CPE initialization fail!</FONT><BR>');
    dhcpExitFail();
}

vClear($IF0);
vClear($IF1);
ResetDhcpOpt();
#--------------------------------------------------------------#
# Main Procedure
#--------------------------------------------------------------#
vLogHTML('<B>==== Receipt of Decline Messages (w/o IA option) ====</B><BR>');




# 1. send DHCPv6 Solicit Message
$CID_OPTION = "opt_CID_LLT_client1";
$IA_NA_OPTION = "opt_IA_NA";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my ($ret1, %sol1) = send_solicit($IF1, "solicit_client1_to_alldhcp", "");
if (0 != $ret1){
	dhcpExitFail();
}




# 2. wait for DHCPv6 Advertise Message
my ($ret2, %adv2) = wait_for_advertise($IF1, 5);
 if (0 != $ret2){
 	dhcpExitFail();
 }

# check options in Advertise Message
 if (0 != options_exist(\%adv2, ($CMP_CID|$CMP_SID))){
 	dhcpExitError("<B>Do not include necessary options!</B>");
}

# compare Options
if (0 != compare_options(\%sol1, \%adv2, ($CMP_CID|$CMP_TRANS_ID))){
	dhcpExitError("<B>Option Error</B>");
}

# 3. send DHCPv6 Request Message
$CID_OPTION = "opt_CID_LLT_client1";
$IA_NA_OPTION = "opt_IA_NA";
$SID_OPTION = "opt_SID_ANY";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my ($ret3, %req3) = send_request($IF1, "request_client1_to_alldhcp", \%adv2, "");
 if (0 != $ret3) {
	dhcpExitFail() 
}

# 4.wait for DHCPv6 Reply Message
my ($ret4, %rep4) = wait_for_reply($IF1, 5);
 if (0 != $ret4){
	dhcpExitFail();
}

# check options in Reply Message
 if (0 != options_exist(\%rep4, ($CMP_IA_NA|$CMP_CID|$CMP_SID))){
	 dhcpExitError("<B>Do not include necessary options!</B>");
 }

# compare Client ID Options
 if (0 != compare_options(\%req3, \%rep4, $CMP_CID)){
	 dhcpExitError("<B>The client ID option in Reply Msg is error!</B>");
}

 if (0 != compare_options(\%req3, \%rep4, $CMP_TRANS_ID)){
	 dhcpExitError("<B>The transaction ID in Reply Msg is error!</B>");
}

# send DHCPv6 Decline Message
$CID_OPTION = "opt_CID_LLT_client1";
$SID_OPTION = "opt_SID_ANY";
$IA_NA_OPTION = "opt_IA_NA_Decline_Nobinding1";
$IA_NA_OPTION1 = "opt_IA_NA_Decline_Nobinding2";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my ($ret5, %rel5) = send_decline($IF1, "decline_client1_to_alldhcp", \%rep4,"");
dhcpExitFail if (0 != $ret5);

# wait for DHCPv6 Reply Message
my ($ret6, %rep6) = wait_for_reply($IF1, 5);
if (0 != $ret6){
	dhcpExitFail();
}

# check Options
if (0 != options_exist(\%rep6, ($CMP_SID|$CMP_CID))){
	dhcpExitError("<B>Do not include necessary options!</B>");
}

# compare CID
if (0 != compare_options(\%rel5, \%rep6, ($CMP_CID|$CMP_TRANS_ID|$CMP_SID))){
	dhcpExitFail();
}

# check existence of IA_NA option
dhcpExitError("<B>NUT does not include IA_NA option!</B>") if options_exist(\%rep6,$CMP_IA_NA);

#----
# check existence of IA_Address option
dhcpExitError("<B>NUT includes invalid IA_Address option in the 1st IA_NA option!</B>")
	unless option_exist(\%rep6,"Opt_DHCPv6_IA_NA.Opt_DHCPv6_IA_Address");

# check existence and location of Status code option
dhcpExitError("<B>NUT does not include Status Code option in the 1st IA_NA option.</B>")
	if option_exist(\%rep6,"Opt_DHCPv6_IA_NA.Opt_DHCPv6_StatusCode");

# check the value of status code
# NoBinding(3)
my $result = check_statuscode(\%rep6,"Opt_DHCPv6_IA_NA.Opt_DHCPv6_StatusCode.StatusCode",$STATUS_CODE_NOBINDING);
dhcpExitError("<B>NUT does not include valid NoBinding Status code in the 1st IA_NA option!</B><BR>") if ($result);

#----
# check existence of IA_Address option
dhcpExitError("<B>NUT includes invalid IA_Address option in the 2nd IA_NA option!</B>")
	unless option_exist(\%rep6,"Opt_DHCPv6_IA_NA2.Opt_DHCPv6_IA_Address");

# check existence and location of Status code option
dhcpExitError("<B>NUT does not include Status Code option in the 2nd IA_NA option.</B>")
	if option_exist(\%rep6,"Opt_DHCPv6_IA_NA2.Opt_DHCPv6_StatusCode");

# check the value of status code
# NoBinding(3)
my $result = check_statuscode(\%rep6,"Opt_DHCPv6_IA_NA2.Opt_DHCPv6_StatusCode.StatusCode",$STATUS_CODE_NOBINDING);
dhcpExitError("<B>NUT does not include valid NoBinding Status code in the 2nd IA_NA option!</B><BR>") if ($result);

#----
# check the Status Code option "Success" in the main part.
#unless (options_exist(\%rep6,$CMP_STATUS_CODE)){
#	my $result = check_statuscode(\%rep6,"Opt_DHCPv6_StatusCode.StatusCode",$STATUS_CODE_SUCCESS);
#	dhcpExitError("<B>The returned status code is not Success.</B>") if($result);
#}

#-------------------------------------------------------------------
vLogHTML("<B><FONT COLOR=#006666>The Message exchange is correct</FONT></B><BR>");
#-------------------------------------------------------------------

vClear($IF0);
vClear($IF1);
vStop($IF0);
vStop($IF1);
dhcpExitPass(); 
#NOTREACHED

########################################################################
__END__

=head1 NAME

  Reception of Decline messages
  Part C: Reply when receipt Decline message

=head1 TARGET

  CE-Router

=head1 SYNOPSIS

=begin html
 <PRE>
 <A HREF="./S_RFC3315_18.2.6_NobindingStutusCodeOpReceiptDeclineMsg.seq">S_RFC3315_18.2.6_NobindingStutusCodeOpReceiptDeclineMsg.seq </A>[-tooloption ...] 
 -pkt <A HREF="./S_RFC3315_18.2.6_NobindingStutusCodeOpReceiptDeclineMsg.def">S_RFC3315_18.2.6_NobindingStutusCodeOpReceiptDeclineMsg.def </A> 
 -tooloption: v6eval tool option
See Also <A HREF="../DHCPv6.def"> DHCPv6.def </A>
 </PRE>

=head1 INITIALIZATION

	Common Test Setup is performed at the beginning of this test part.
	
=begin html
  <UL>
  <LI><STRONG>Network Topology</STRONG></LI>
  </UL>
  <PRE>
          TN(Server)  
	     |
Link0 -------+-----------+--------------- 3ffe:501:ffff:100::/64
                         |
                       NUT(Server1)
                         |
Link1 -------+-----------+--------------- 3ffe:501:ffff:111x::/64
	     |
          TN(Client1)
  </PRE>
  <UL>
      <LI><STRONG>Verification Points</STRONG></LI>
<PRE>
For each IA in the Decline message for which the server has no binding information, the
server adds an IA option using the IAID from the Decline message and includes
<B>a Status Code option with the value NoBinding in the IA option. </B>
<B>No other options are included in the IA option.</B>
And the Reply message need include a status code option with status value <B>Success</B>.
</PRE>
  <UL>
  <PRE>
Reply Message
	<LI>msg-type</LI>
	<B>REPLY(7)</B>
	<LI>Status Code option</LI>
	<B>value=Success(0)</B>	
	<LI>IA_NA option 1</LI>
	<UL>
	<LI>IAID </LI>
	<B>Same as the Decline message</B>
	<LI>Status Code option</LI>
	<B>value=NoBinding(3)</B>
	</UL>
	<LI>IA_NA option 2</LI>
	<UL>
	<LI>IAID </LI>
	<B>Same as the Release message</B>
	<LI>Status Code option</LI>
	<B>value=NoBinding(3)</B>
	</UL>
  </PRE>
  </UL>
      <LI><STRONG>Configuration</STRONG></LI>
  <UL>
	<BLOCKQUOTE>
	<TABLE BORDER>
	<TR>
	<TD><TT>Device Name</TT></TD>
	<TD><TT>Device Type</TT></TD>
	<TD><TT>I/F</TT></TD>
	<TD><TT>Assigned Prefix</TT></TD>
	<TD><TT>Link Local Addr</TT></TD>
	<TD><TT>MAC Addr</TT></TD>
	<TD><TT>IA_NA option 1</TT></TD>
	<TD><TT>IA_NA option 2</TT></TD>
	</TR>
	<TR>
	<TD><TT>Server1</TT></TD>
	<TD><TT>NUT</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:111x::/64</TT></TD>
	<TD><TT>NUT's Linklocal address</TT></TD>
	<TD><TT>NUT's MAC address</TT></TD>
	<TD><TT>Yes</TT></TD>
	<TD><TT>Yes</TT></TD>
	</TR>
	<TR>
	<TD><TT>Client1</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:111x::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a2a2</TT></TD>
	<TD><TT>00:00:00:00:a2:a2</TT></TD>
	<TD><TT>Yes</TT></TD>
	<TD><TT>Yes</TT></TD>
	</TABLE>
	</BLOCKQUOTE>
	</UL>
</UL>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
    TN(Link0)	NUT     TN(Link1)
	|	|       | 
	| <---> |       | CE initialization (provide RA and DHCP informaiton to NUT)
	|	|       | 
        |	| <---- | Solicit
        |	| ----> | Advertise
        |	| <---- | Request
        |	| ----> | Reply
        |	|       | 
        |	|       | 
        |	|       | 
        |	| <---- | Decline (w/  IA_NA option 1, IA_NA option2) (No binding information)
        |	| ----> | Reply	(*1)(w/  IA_NA option 1, IA_NA option2)
        |	|       |
</PRE>

=end html

=head1 JUDGEMENT

<PRE>
(*1) PASS:  NUT send Reply message(IA_NA options include Status Code option,value = NoBinding(3)).
            And it include a "Success" status code option.
</PRE>

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
[RFC 7084],W-1
[RFC 3315],Section 18.2.7
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut


