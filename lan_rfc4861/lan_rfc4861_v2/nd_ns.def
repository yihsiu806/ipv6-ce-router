//
// Copyright (C) 2013
// Chunghwa Telecommunication Labratories (CHT-TL)
// All rights reserved.
// 
// Redistribution and use of this software in source and binary
// forms, with or without modification, are permitted provided that
// the following conditions and disclaimer are agreed and accepted
// by the user:
// 
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in
//    the documentation and/or other materials provided with
//    the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project
//    which is related to this software (hereinafter referred to as
//    "project") nor the names of the contributors may be used to
//    endorse or promote products derived from this software without
//    specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written
//    notification to the copyrighters.
// 
// 5. The copyrighters, the project and the contributors may prohibit
//    the use of this software at any time.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
// IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
// $CHT-TL: nd_ns.def,v 1.0 2013/08/19 weifen Exp $
//
////////////////////////////////////////////////////////////////

#ifndef HAVE_ND_NS_DEF
#define HAVE_ND_NS_DEF

#include "./ndisc.def"

//
// NS: TN -> NUT
//
////////////////////////////////

FEM_icmp6_ns(
	nd_ucast_ns,
	_HETHER_tn2_to_nut,
	{
		HopLimit	= 255;
		_SRC(v6(TN2_LINKLOCAL));
		_DST(nutv6("Link1"));
	},
	{
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_ns(
	nd_ucast_ns_sll,
	_HETHER_tn2_to_nut,
	{
		HopLimit	= 255;
		_SRC(v6(TN2_LINKLOCAL));
		_DST(nutv6("Link1"));
	},
	{
		TargetAddress	= nutv6("Link1");
		option		= opt_sll_tn2;
	}
)

FEM_icmp6_ns(
	nd_mcast_ns,
	_HETHER_tn2nutsolnode,
	{
		HopLimit	= 255;
		_SRC(v6(TN2_LINKLOCAL));
		_DST(_IPV6_SOLNODE_MCAST(nutv6("Link1")));
	},
	{
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_ns(
	nd_mcast_ns_sll,
	_HETHER_tn2nutsolnode,
	{
		HopLimit	= 255;
		_SRC(v6(TN2_LINKLOCAL));
		_DST(_IPV6_SOLNODE_MCAST(nutv6("Link1")));
	},
	{
		TargetAddress	= nutv6("Link1");
		option		= opt_sll_tn2;
	}
)

//
// NS: TN -> NUT (diff)
//
////////////////////////////////

FEM_icmp6_ns(
	nd_ucast_ns_x,
	_HETHER_h02nut,
	{
		HopLimit	= 255;
		_SRC(v6(TN2_LINKLOCAL));
		_DST(nutv6("Link1"));
	},
	{
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_ns(
	nd_ucast_ns_sll_x,
	_HETHER_h02nut,
	{
		HopLimit	= 255;
		_SRC(v6(TN2_LINKLOCAL));
		_DST(nutv6("Link1"));
	},
	{
		TargetAddress	= nutv6("Link1");
		option		= opt_sll_h0;
	}
)

FEM_icmp6_ns(
	nd_mcast_ns_x,
	_HETHER_h02nutsolnode,
	{
		HopLimit	= 255;
		_SRC(v6(TN2_LINKLOCAL));
		_DST(_IPV6_SOLNODE_MCAST(nutv6("Link1")));
	},
	{
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_ns(
	nd_mcast_ns_sll_x,
	_HETHER_tn2nutsolnode,
	{
		HopLimit	= 255;
		_SRC(v6(TN2_LINKLOCAL));
		_DST(_IPV6_SOLNODE_MCAST(nutv6("Link1")));
	},
	{
		TargetAddress	= nutv6("Link1");
		option		= opt_sll_h0;
	}
)

//
// NA: NUT -> TN
//
////////////////////////////////

FEM_icmp6_na(
	nd_recv_na_RSO_tll,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_RSO,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_RSo_tll,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_RSo,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_Rso_tll,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_Rso,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_RsO_tll,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_RsO,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rSO_tll,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rSO,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rSo_tll,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rSo,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rso_tll,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rso,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rsO_tll,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rsO,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_RSO_tll_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_RSO_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_RSo_tll_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_RSo_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_Rso_tll_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_Rso_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_RsO_tll_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_RsO_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rSO_tll_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rSO_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rSo_tll_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rSo_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rso_tll_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rso_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rsO_tll_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rsO_GL,
	_HETHER_nut_to_tn2,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

//
// NA: NUT -> TN (diff)
//
////////////////////////////////

FEM_icmp6_na(
	nd_recv_na_RSO_tll_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_RSO_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_RSo_tll_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_RSo_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_Rso_tll_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_Rso_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_RsO_tll_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_RsO_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rSO_tll_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rSO_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rSo_tll_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rSo_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rso_tll_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rso_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rsO_tll_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rsO_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_RSO_tll_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_RSO_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_RSo_tll_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_RSo_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_Rso_tll_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_Rso_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_RsO_tll_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_RsO_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rSO_tll_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rSO_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rSo_tll_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rSo_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rso_tll_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rso_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
	}
)

FEM_icmp6_na(
	nd_recv_na_rsO_tll_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_recv_na_rsO_GL_x,
	_HETHER_nut2h0,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(TN2_LINKLOCAL));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
	}
)

//
// NA: NUT -> all-nodes multicast address
//
////////////////////////////////

FEM_icmp6_na(
	nd_dad_na_RsO_tll,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_dad_na_Rso_tll,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_dad_na_rsO_tll,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_dad_na_rso_tll,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_dad_na_RsO_tll_global,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_dad_na_Rso_tll_global,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 1;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_dad_na_rsO_tll_global,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)

FEM_icmp6_na(
	nd_dad_na_rso_tll_global,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= nutv6("Link1");
		option		= opt_tll_nut_lan;
	}
)
#endif	// HAVE_ND_NS_DEF
