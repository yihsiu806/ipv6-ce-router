//
// Copyright (C) 2013
// Chunghwa Telecommunication Labratories (CHT-TL)
// All rights reserved.
// 
// Redistribution and use of this software in source and binary
// forms, with or without modification, are permitted provided that
// the following conditions and disclaimer are agreed and accepted
// by the user:
// 
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in
//    the documentation and/or other materials provided with
//    the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project
//    which is related to this software (hereinafter referred to as
//    "project") nor the names of the contributors may be used to
//    endorse or promote products derived from this software without
//    specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written
//    notification to the copyrighters.
// 
// 5. The copyrighters, the project and the contributors may prohibit
//    the use of this software at any time.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
// IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
// $CHT-TL: v6LC_2_1_6_C-v3_8_2.def,v 1.0 2013/08/19 weifen Exp $
//
////////////////////////////////////////////////////////////////


#include "./ndisc.def"


FEM_icmp6_echo_request(
	setup_echo_request,
	_HETHER_r02nut,
	{
		_SRC(v6(R0_LINKLOCAL));
		_DST(nutv6("Link1"));
	},
	{
		payload	= setup_echo_data8;
	}
)

FEM_icmp6_echo_reply(
	setup_echo_reply,
	_HETHER_nut2r0,
	{
		_SRC(nutv6("Link1"));
		_DST(v6(R0_LINKLOCAL));
	},
	{
		payload	= setup_echo_data8;
	}
)


FEM_icmp6_ns(
	ns_l2l,
	_HETHER_nut2r0solnode,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(_IPV6_SOLNODE_MCAST(v6(R0_LINKLOCAL)));
	},
	{
		TargetAddress	= v6(R0_LINKLOCAL);
		option	= opt_sll_nut_lan;
	}
)

FEM_icmp6_na(
	na_l2l,
	_HETHER_r02nut,
	{
		HopLimit	= 255;
		_SRC(v6(R0_LINKLOCAL));
		_DST(nutv6("Link1"));
	},
	{
		RFlag	= 1;
		SFlag	= 1;
		OFlag	= 1;
		TargetAddress	= v6(R0_LINKLOCAL);
		option	= _TLLOPT_r0;
	}
)

FEM_icmp6_ns(
	ns_g2l,
	_HETHER_nut2r0solnode,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(_IPV6_SOLNODE_MCAST(v6(R0_LINKLOCAL)));
	},
	{
		TargetAddress	= v6(R0_LINKLOCAL);
		option	= opt_sll_nut_lan;
	}
)

FEM_icmp6_na(
	na_l2g,
	_HETHER_r02nut,
	{
		HopLimit	= 255;
		_SRC(v6(R0_LINKLOCAL));
		_DST(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
	},
	{
		RFlag	= 1;
		SFlag	= 1;
		OFlag	= 1;
		TargetAddress	= v6(R0_LINKLOCAL);
		option	= _TLLOPT_r0;
	}
)

Opt_ICMPv6_TLL _TLLOPT_r0 {
	LinkLayerAddress	= ether(R0_MAC);
}

FEM_icmp6_ns(
	ucast_ns_l2l,
	_HETHER_nut2r0solnode,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(R0_LINKLOCAL));
	},
	{
		TargetAddress	= v6(R0_LINKLOCAL);
	}
)

FEM_icmp6_ns(
	ucast_ns_g2l,
	_HETHER_nut2r0solnode,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(R0_LINKLOCAL));
	},
	{
		TargetAddress	= v6(R0_LINKLOCAL);
	}
)

FEM_icmp6_ns(
	ucast_ns_sll_l2l,
	_HETHER_nut2r0solnode,
	{
		HopLimit	= 255;
		_SRC(nutv6("Link1"));
		_DST(v6(R0_LINKLOCAL));
	},
	{
		TargetAddress	= v6(R0_LINKLOCAL);
		option	= opt_sll_nut_lan;
	}
)

FEM_icmp6_ns(
	ucast_ns_sll_g2l,
	_HETHER_nut2r0solnode,
	{
		HopLimit	= 255;
		_SRC(v6merge(PREFIX_FROM_PD,64,nutv6("Link1")));
		_DST(v6(R0_LINKLOCAL));
	},
	{
		TargetAddress	= v6(R0_LINKLOCAL);
		option	= opt_sll_nut_lan;
	}
)

