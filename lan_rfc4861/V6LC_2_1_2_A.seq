#!/usr/bin/perl
#
# Copyright (C) 2013, 2014, 2015
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: V6LC_2_1_2_A.seq,v 1.1 2015/04/28 weifen Exp $
#
########################################################################
BEGIN{
	$V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_1 $';
}

use nd;

use lib '../.';
use DHCPv6_common;
use CPE6_config;

###################################################################################
vCapture($Link0);
startNdiscWorld($Link1);

vLogHTML('<FONT COLOR="#FF0000" SIZE="5"><U><B>Procedure</B></U></FONT><BR>');

my $ra = $STATEFUL_CLIENT ? 'ra_MsetOset' : 'ra_MclearOset';
my ($ret,$tn2_prefix) = cpe_initialization($ra,$Link0,$Link1,$STATEFUL_CLIENT,0);
if ($ret != 0) {
    vLogHTML('<FONT COLOR="#FF0000">CPE initialization fail!</FONT><BR>');
    dhcpExitFail();
}
###################################################################################

my $max		= $WAIT_QUEUE_LMT;
my %echo	= ();

$NEED_COMMON_CLEANUP = 1;

if(ndResolutionWaitQueueSingleSetup($max, \%echo) < 0) {
	dhcpExitFail();
	#NOTREACHED
}

if(ndResolutionWaitQueueSingle($Link1, \%echo) < 0) {
	dhcpExitFail();
	#NOTREACHED
}

dhcpExitPass();
#NOTREACHED


#
# perldoc
#
########################################################################
__END__


=head1 NAME

  Resolution Wait Queue
  Part A: Single Queue

=head1 Purpose

  Verify that a node properly queues packets while waiting for address resolution of the next hop.

=head1 References

[RFC 7084],L-1
[RFC 4861],Section 3, Section 7.2.2

=head1 Resource Requirements

  * Packet generator
  * Monitor to capture packets

=head1 Test Setup

	Common Test Setup is performed at the beginning of this test part.

=begin html

<BLOCKQUOTE>

<TABLE BORDER>
<Caption>Packet A</Caption>
<TR>
<TD>
	IPv6 Header<br>
	Next Header: 58<br>
	Source Address: TN2's Link-local Address
</TD>
</TR>
<TR>
<TD>ICMPv6 Echo Request<br>Sequence Number: 3</TD>
</TR>
</TABLE>

<br>

<TABLE BORDER>
<Caption>Packet B</Caption>
<TR>
<TD>
        IPv6 Header<br>
        Next Header: 58<br>
        Source Address: TN2's Global Address
</TD>
</TR>
<TR>
<TD>ICMPv6 Echo Request<br>Sequence Number: 4</TD>
</TR>
</TABLE>

<br>

<TABLE BORDER>
<Caption>Neighbor Advertisement C</Caption>
<TR>
<TD>
        IPv6 Header<br>
        Next Header: 58<br>
	Source Address: TN2's<br>
	Link-local Address<br>
	Destination Address: NUT's Link-local Address
</TD>
</TR>
<TR>
<TD>
	Neighbor Advertisement<br>
	Router flag: 0<br>
	Solicited flag: 1<br>
	Override flag: 1<br>
	Target Address: TN2's Link-local Address
</TD>
</TR>
</TABLE>

<br>

<TABLE BORDER>
<Caption>Neighbor Advertisement D</Caption>
<TR>
<TD>
        IPv6 Header<br>
        Next Header: 58<br>
        Source Address: TN2's<br>
        Link-local Address<br>
	Destination Address: NUT's Link-local Address
</TD>
</TR>
<TR>
<TD>
        Neighbor Advertisement<br>
        Router flag: 0<br>
        Solicited flag: 1<br>
        Override flag: 1<br>
        Target Address: TN2's Link-local Address
</TD>
</TR>
</TABLE>

</BLOCKQUOTE>

=end html


=head1 Procedure

  Part A: Single Queue
   1. TN2 transmits Packet A, an Echo Request, 3 times. The Sequence number is incremented each
      time.
   2. Observe the packets transmitted by the NUT.
   3. TN2 transmits the Neighbor Advertisement C in response to any Neighbor Solicitations from the
      NUT.
   4. Observe the packets transmitted by the NUT.

=head1 Observable Results

  Part A
   Step 2:
   The NUT should transmit a Neighbor Solicitation with a Target Address equal to
   TN2's link-local address. The NUT should send Echo Replies to TN2 in response to Packet
   A.

   Step 4:
   The Echo Replies should correspond to the last 3 Echo Requests sent by TN2 to 
   the NUT, indicating successful queuing of packets while waiting for address resolution
   to complete. The number of Echo Replies MUST be no less than 1.


=head1 Possible Problems

  * None. 

=cut

