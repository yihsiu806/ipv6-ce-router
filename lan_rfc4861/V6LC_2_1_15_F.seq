#!/usr/bin/perl
#
# Copyright (C) 2013, 2014, 2015
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: V6LC_2_1_15_F.seq,v 1.1 2015/04/28 weifen Exp $
#
########################################################################
BEGIN{
	$V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_2 $';
}

use nd;

use lib '../.';
use DHCPv6_common;
use CPE6_config;


my $ereq = 'ndisc_ereq_LL';

###################################################################################
vCapture($Link0);
startNdiscWorld($Link1);

vLogHTML('<FONT COLOR="#FF0000" SIZE="5"><U><B>Procedure</B></U></FONT><BR>');

my $ra = $STATEFUL_CLIENT ? 'ra_MsetOset' : 'ra_MclearOset';
my ($ret,$tn2_prefix) = cpe_initialization($ra,$Link0,$Link1,$STATEFUL_CLIENT,0);
if ($ret != 0) {
    vLogHTML('<FONT COLOR="#FF0000">CPE initialization fail!</FONT><BR>');
    dhcpExitFail();
}
###################################################################################

if(ndiscNone2Incomplete($Link1, $ereq) < 0) {
	exitInitFail();
	#NOTREACHED
}

$pktdesc{'nd_na_local'}
        = '    Send NA (rSO, link-local) w/ TLL: '.
		'TN (link-local) -&gt; all-nodes multicast address';

if(ndSendNaIncomplete2Incomplete($Link1, $ereq, 'nd_na_local') < 0) {
	$NEED_COMMON_CLEANUP = 1;
	$tn2_cache = 1;
	dhcpExitFail();
	#NOTREACHED
}

dhcpExitPass();
#NOTREACHED



#
# perldoc
#
########################################################################
__END__

=head1 NAME

  Invalid Neighbor Advertisement Handling
  Part F: NUT receives invalid NA (target == multicast address)

=head1 Purpose

   Verify that a node takes the proper actions upon receipt of an invalid Neighbor Advertisement.

=head1 References

[RFC 7084],L-1
[RFC 4861],Section 7.1.2

=head1 Resource Requirements

  * Packet generator
  * Monitor to capture packets

=head1 Test Setup

  Common Test Setup is performed at the beginning of this test part.

=begin html

<BLOCKQUOTE>

<TABLE BORDER>
<Caption>Neighbor Advertisement A</Caption>
<TR>
<TD>
        IPv6 Header<br>
        Next Header: 58<br>
        Source Address: TN2's Link-local Address<br>
	Destination Address:  all-nodes multicast address
</TD>
</TR>
<TR>
<TD>
	Neighbor Advertisement<br>
	ICMP Code: 0<br>
	ICMP Checksum: Valid<br>
	Router flag: 0<br>
	Solicited flag: 0<br>
	Override flag: 1<br>
	Target Address: TN2's link-local address<br>
	TLLOPT: TN2's MAC address<br>
</TD>
</TR>
</TABLE>

</BLOCKQUOTE>

=end html

=head1 Procedure

  Part F: NUT receives invalid NA (target == multicast address)
   21. TN2 transmits an Echo Request to the NUT.
   22. Observe the packets transmitted by the NUT.
   23. Configure TN2 to transmit Neighbor Advertisement A with the Target Address set to the solicited
        multicast of TN2's link-local address.
   24. Observe packet captures on Link B.

=head1 Observable Results

  Part F
   Step 22:
   The NUT should transmit a Neighbor Solicitation to TN2's solicited-node multicast
   address.

   Step 24:
   The NUT should ignore the Neighbor Advertisement sent by TN2 and should
   continue to transmit Neighbor Solicitations to TN2's solicited-node multicast address.

=head1 Possible Problems

  * None.

=cut

