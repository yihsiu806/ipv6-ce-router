#!/usr/bin/perl
#
# Copyright (C) 2013
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: W_RA_LFlag_D.seq, v 1.0 2013/08/30 weifen Exp $
#
################################################################

BEGIN{
	$V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_2 $';
}
use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Client_pktdesc;
use CPE6_config;
use CPE6;

my $type=$V6evalTool::NutDef{Type};
if($type ne 'router') {
	vLogHTML('<FONT COLOR="#FF0000">This test does not support Host!</FONT>');
	exit $V6evalTool::exitRouterOnly;
}


#--------------------------------------------------------------#
# Initialization variables
#--------------------------------------------------------------#
my $IF0_NUT = $V6evalTool::NutDef{"Link0_device"};
my $IF0 = "Link0";

vClear($IF0);
vCapture($IF0);

#--------------------------------------------------------------#
# 1. Send RA with Lifetime > 0, Lflag=1 (tr1->nut)
#--------------------------------------------------------------#
if ($STATEFUL_CLIENT) {
  my ($ret,$param) = cpe_initialization('ra_LifetimeSetLSet_IANA',$IF0,"",$STATEFUL_CLIENT,0);
  if ($ret==1) {
    cpe6ExitError("<B>Fail to initialize CPE!</B><BR>")
  }
} else {
  vSend($IF0, 'ra_LifetimeSetLSet');
}
ignoreDAD($IF0);

if ($STATEFUL_CLIENT) {
  vCPP("-D\'NUT_ADDR=NUT_GLOBAL_ADDR_From_IANA' ");
}

#--------------------------------------------------------------#
# 2. ping test (tn1->nut global address)
#--------------------------------------------------------------#
vSleep(5);
vClear($IF0);

vSend($IF0, 'ereq_tn1_to_nut');
my %ret = vRecv($IF0, 5, 0, 0, 'erep_nut_to_tn1', 'ns_nut_to_tn1');
if ($ret{'status'} == 0) {
  if ($ret{recvFrame} eq 'erep_nut_to_tn1'){
    vLogHTML("<B>TN1 received echo reply from NUT.</B><BR>");	
  } elsif ($ret{recvFrame} eq 'ns_nut_to_tn1') {
    vLogHTML("<B>TN1 received NS from NUT. Send NA</B><BR>");	
    vSend($IF0, 'na_tn1_to_nut');
    my %ret1 = vRecv($IF0, 5, 0, 0, 'erep_nut_to_tn1');
    if ($ret1{'status'} == 0) {
      vLogHTML("<B>TN1 received echo reply from NUT.</B><BR>");	
    } else {
      cpe6ExitError("<B>TN1 MUST receive echo reply from NUT.</B><BR>")
    }
  }
} else {
    cpe6ExitError("<B>TN1 MUST receive NS from NUT.</B><BR>")
}


#--------------------------------------------------------------#
# End
#--------------------------------------------------------------#
# send RA with routerlifetime = 0
vSend($IF0, 'ra_RouterLifetimeZero');

vClear($IF0);
vStop($IF0);

cpe6ExitPass($IF0);

###############################################################################
__END__

=head1 NAME 

  L Flag Processing
  Part A: L flag set

=head1 TARGET

  CE-Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./W_RA_LFlag_D.seq"> W_RA_LFlag_D.seq</A> [-tooloption...] <BR>  -pkt  <A HREF="./W_RA_LFlag_D.def"> W_RA_LFlag_D.def</A> <BR>  -tooloption : v6eval tool option
<BR>
  See Also <A HREF="../CPE6_common.def"> CPE6_common.def </A> 
</PRE>

=end html

=head1 INITIALIZATION

=head1 TEST PROCEDURE

=begin html
<PRE>
<BR>
       TN2  CE-Router  TR1
        |       |       |
        |       |       |Initialize NUT(as a DHCPv6 requesting router)
        |       |       |
        |       | <---- |<B>RA with L-flag set and non-zero router lifetime</B>
        |       |       |
        |       | <---- |<B>Echo Request</B>
        |       | ----> |<B>Echo Reply</B> (1*)
        |       |       |

<BR>
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
<BR>
  (1*)PASS: TN receives echo reply from CE-Router.
</PRE>

=end html

=head1 TERMINATION

=begin html
<PRE>
  N/A
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
[RFC 7084],WAA-2
[RFC 5942],Section 4
</PRE>

=end html

=head1 SEE ALSO

=begin html
<PRE>
<BR>
  perldoc  V6evalTool
<BR>
</PRE>

=end html
