#!/usr/bin/perl
#
# Copyright (C) 2013
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: W_DHCP6_Hint.seq, v 1.1 2014/07/17 weifen Exp $
#
################################################################

BEGIN{
	$V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_1 $';
}
use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Client_pktdesc;
use CPE6_config;
use CPE6;

my $type=$V6evalTool::NutDef{Type};
if($type ne 'router') {
	vLogHTML('<FONT COLOR="#FF0000">This test does not support Host!</FONT>');
	exit $V6evalTool::exitRouterOnly;
}

if (!$HINT) {
	vLogHTML('<B>SKIP</B><BR>');
	exit $V6evalTool::exitNS;
}

#--------------------------------------------------------------#
# Initialization variables
#--------------------------------------------------------------#
my $IF0_NUT = $V6evalTool::NutDef{"Link0_device"};
my $IF0 = "Link0";

vClear($IF0);
vCapture($IF0);

my $ret = vRemote("cpe6.rmt", "start", "prefix", "prefixlen=56", "link0=$IF0_NUT");
if($ret != 0) {
      vLogHTML('<FONT COLOR="#FF0000">Cannot Initialize CE-Router.</FONT><BR>');
      cpe6ExitFail;
};

#--------------------------------------------------------------#
# 1. Send RA with M_flag=0, O_flag=1 (tr1->nut)
#--------------------------------------------------------------#
vClear($IF0);
if ($STATEFUL_CLIENT) {
	vSend($IF0, 'ra_MclearOset_local');
} else {
	vSend($IF0, 'ra_MclearOset');
	ignoreDAD($IF0);
}

#--------------------------------------------------------------#
# 2. Wait until DHCPv6 Solicit arrives (nut->tr1)
#--------------------------------------------------------------#
my ($retsol,%sol) = wait_for_solicit2($IF0, 30);
cpe6ExitFail if($retsol != 0);

my $cmp;
if ($STATEFUL_CLIENT) {
	$cmp= $CMP_IA_NA | $CMP_IA_PD;
} else {
	$cmp= $CMP_IA_PD;
}
cpe6ExitError("<B>Do not include necessary options.</B><BR>") if (0 != options_exist(\%sol, $cmp));

# Solici must inlcude the IA_PD option and the prefix length must less than 60
my $base = 'Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_Solicit.Opt_DHCPv6_IA_PD.Opt_DHCPv6_IA_Prefix';
if (!defined($sol{$base})) {
    cpe6ExitError("<B>Solicit must include IA prefix in IA_PD option as a HINT.</FONT></B><BR>");
}

my $prefix_len = $sol{$base.".".".PrefixLength"};
if ($prefix_len != 56) {
    cpe6ExitError("<B><FONT COLOR=\"#FF0000\">IA_PD prefix must be 56.</FONT></B><BR>");
}
vClear($IF0);

#--------------------------------------------------------------#
# 3. Send DHCPv6 Advertise message (tr1->nut)
#--------------------------------------------------------------#
$SID_OPTION = "opt_SID_LLT_server1";
$IA_PD_OPTION = "opt_IA_PD_PF1";
if ($STATEFUL_CLIENT) {
	$IA_NA_OPTION = "opt_IA_NA_Addr_woStatus";
}
my ($retadv, %adv) = send_advertise($IF0, "advertise_server1_to_nut", \%sol, "");
cpe6ExitFail if($retadv != 0);

#--------------------------------------------------------------#
# 4. Wait until DHCPv6 Request arrives (nut->tr1)
#--------------------------------------------------------------#
my ($retreq,%req) = wait_for_request2($IF0, 30);
cpe6ExitFail if($retreq != 0);

cpe6ExitError("<B>Do not include necessary options.</B><BR>") if (0 != options_exist(\%req, $cmp));
my $base = 'Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_Request.Opt_DHCPv6_IA_PD.Opt_DHCPv6_IA_Prefix';
if (!defined($req{$base})) {
    cpe6ExitError("<B>Can not get prefix option in Request message.</FONT></B><BR>");
}

my $prefix_len = $req{$base.".".".PrefixLength"};
if ($prefix_len != 60) {
    cpe6ExitError("<B><FONT COLOR=\"#FF0000\">Prefix length in IA_PD must be 60.</FONT></B><BR>");
}
#--------------------------------------------------------------#
# End
#--------------------------------------------------------------#
vClear($IF0);
vStop($IF0);

#dhcpExitPass;
cpe6ExitPass($IF0);

###############################################################################
__END__

=head1 NAME 

  Prefix Delegation Size
  Part A: Longer Prefix Length

=head1 TARGET

  CE-Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./W_DHCP6_Hint.seq"> W_DHCP6_Hint.seq</A> [-tooloption...] <BR>  -pkt  <A HREF="./W_DHCP6_Hint.def"> W_DHCP6_Hint.def</A> <BR>  -tooloption : v6eval tool option
<BR>
  See Also <A HREF="../CPE6_common.def"> CPE6_common.def </A> 
</PRE>

=end html

=head1 INITIALIZATION

	No Common Test Setup is performed.
	
=head1 TEST PROCEDURE

=begin html
<PRE>
<BR>
       TN2     NUT     TR1
        |       |       |
        |       |       |Initialize NUT(as a DHCPv6 requesting router)
        |       |       |
        |       | <---- |<B>RA</B>
        |       |       |
        |       | ----> |<B>Solicit</B> (1*)
        |       | <---- |<B>Advertise</B>
        |       | ----> |<B>Request</B> (2*)
        |       |       |
        |       |       |

<BR>
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
<BR>
  (1*)PASS: TR1 receives Solicit with prefix as a hint from NUT.
  (2*)PASS: TR1 receives DHCPv6 Request message with IA_PD with a prefix length that matches the value in the DHCPv6 Advertise message.

</PRE>

=end html

=head1 TERMINATION

=begin html
<PRE>
  N/A
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
[RFC 7084],WPD-2
</PRE>

=end html

=head1 SEE ALSO

=begin html
<PRE>
<BR>
  perldoc  V6evalTool
<BR>
</PRE>

=end html
