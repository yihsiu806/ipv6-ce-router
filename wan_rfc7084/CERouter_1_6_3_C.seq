#!/usr/bin/perl
#
# Copyright (C) 2013
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: CERouter_1_6_3_C.seq, v 1.0 2013/08/30 weifen Exp $
#
################################################################

BEGIN{
	$V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_2 $';
}
use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Client_pktdesc;
use CPE6_config;
use CPE6;
use Digest::HMAC_MD5 qw(hmac_md5 hmac_md5_hex);

my $type=$V6evalTool::NutDef{Type};
if($type ne 'router') {
	vLogHTML('<FONT COLOR="#FF0000">This test does not support Host!</FONT>');
	exit $V6evalTool::exitRouterOnly;
}

#--------------------------------------------------------------#
# Initialization variables
#--------------------------------------------------------------#
my $IF0_NUT = $V6evalTool::NutDef{"Link0_device"};
my $IF0 = "Link0";

vClear($IF0);
vCapture($IF0);

#--------------------------------------------------------------#
# 1. Send RA with M_flag=0, O_flag=1 (tr1->nut)
#--------------------------------------------------------------#
vClear($IF0);
vSend($IF0, 'ra_MsetOset');

#--------------------------------------------------------------#
# 2. Wait until DHCPv6 Solicit arrives (nut->tr1)
#--------------------------------------------------------------#
my ($retsol,%sol) = wait_for_solicit2($IF0, 30);
cpe6ExitFail if($retsol != 0);

my $cmp = $CMP_IA_NA | $CMP_IA_PD | $CMP_RECONF_ACCEPT;
cpe6ExitError("<B>Do not include necessary options.</B><BR>") if (0 != options_exist(\%sol, $cmp));
vClear($IF0);
#--------------------------------------------------------------#
# 3. Send DHCPv6 Advertise message (tr1->nut)
#--------------------------------------------------------------#
$SID_OPTION = "opt_SID_LLT_server1";
$IA_NA_OPTION = "opt_IA_NA_Addr_iana";
$IA_PD_OPTION = "opt_IA_PD_PF1";
$DNS_SVR_OPTION = "opt_DNS_Name_Server1";
$DNS_LST_OPTION = "opt_DNS_ServerSearchList";
$ReconfigureAccept_OPTION = "opt_accept_reconf";

my ($retadv, %adv) = send_advertise($IF0, "advertise_server1_to_nut", \%sol, "");
cpe6ExitFail if($retadv != 0);

#--------------------------------------------------------------#
# 4. Wait until DHCPv6 Request arrives (nut->tr1)
#--------------------------------------------------------------#
my ($retreq,%req) = wait_for_request2($IF0, 30);
cpe6ExitFail if($retreq != 0);

cpe6ExitError("<B>Do not include necessary options.</B><BR>") if (0 != options_exist(\%req, $cmp));
vClear($IF0);

#--------------------------------------------------------------#
# 5. Send DHCPv6 Reply message (tr1->nut)
#--------------------------------------------------------------#
my $auth_proto=3;
#my $auth_counter="000000001";
#vCPP("-D\'AUTH_PROTO=$auth_proto' -D\'AUTH_COUNTER=$auth_counter' -D\'AUTH_INFO=auth_type_key' ");
#vCPP(" -D\'AUTH_PROTO=$auth_proto\' ");
#vCPP('-D AUTH_COUNTER=$auth_counter');
#vCPP('-D AUTH_INFO=auth_type_key');

$IA_PD_OPTION = "opt_IA_PD_PF1";
#$StatusCode_OPTION = "opt_StatusCode";
$ReconfigureAccept_OPTION = "opt_accept_reconf";
$Authentication_OPTION = "opt_Auth";
#$ReconfigureAcception = "";

my ($retrep, %rep) = send_reply($IF0, "reply_server1_to_nut", \%req, "-D\'AUTH_PROTO=$auth_proto' -D\'AUTH_INFO=auth_type_key'");
cpe6ExitFail if($retrep != 0);

ignoreDAD($IF0);
#--------------------------------------------------------------#
# 6. Send DHCPv6 Reconfigure message without authentication option
#--------------------------------------------------------------#
vSleep(10);
vClear($IF0);
$IA_PD_OPTION = "";
my $auth_info ="";
my ($retrec, %rec) = send_reconfigure_message($IF0,\%sol,"dhcp6_reconfigure_server_to_nut", $auth_info);
cpe6ExitFail if($retrec != 0);
#--------------------------------------------------------------#
# 7. Wait DHCPv6 Renew message
#--------------------------------------------------------------#
my ($retrenew,%ren1) = wait_for_renew($IF0,3,0);
cpe6ExitFail if($retrenew == 0);

#--------------------------------------------------------------#
# End
#--------------------------------------------------------------#

vClear($IF0);
vStop($IF0);

cpe6ExitPass($IF0);


###############################################################################
__END__

=head1 NAME 

  Reconfigure Message
  Part C: Reconfigure Message without Authentication

=head1 TARGET

  CE-Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./CERouter_1_6_3_C.seq"> CERouter_1_6_3_C.seq</A> [-tooloption...] <BR>  -pkt  <A HREF="./CERouter_1_6_3_C.def"> CERouter_1_6_3_C.def</A> <BR>  -tooloption : v6eval tool option
<BR>
  See Also <A HREF="../CPE6_common.def"> CPE6_common.def </A> 
</PRE>

=end html

=head1 INITIALIZATION

	Common Test Setup is performed at the beginning of Part B and C.
	The Common Test Cleanup procedure is performed after each part.

=head1 TEST PROCEDURE

=begin html
<PRE>
<BR>
       TN2     NUT     TR1
        |       |       |
        |       |       |Initialize NUT(as a DHCPv6 requesting router)
        |       |       |
        |       | <---- |<B>RA</B>
        |       |       |
        |       | ----> |<B>Solicit</B> (1*)
        |       | <---- |<B>Advertise</B>
        |       | ----> |<B>Request</B> (2*)
        |       | <---- |<B>Reply (with authentication key)</B>
        |       |       |
        |       | <---- |<B>Reconfigure without authentication option</B>
        |       | ----> |<B>renew</B> (3*)
        |       |       |

<BR>
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
<BR>
  (1*)PASS: TR1 receives Solicit with Reconfigure Accept Option from NUT.
  (2*)PASS: TR1 receives Request with Reconfigure Accept Option from NUT.
  (4*)PASS: TR1 can not receives renew from NUT.
</PRE>

=end html

=head1 TERMINATION

=begin html
<PRE>
  N/A
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
[RFC 7084],WAA-4
[RFC 3315],Section 23
</PRE>

=end html

=head1 SEE ALSO

=begin html
<PRE>
<BR>
  perldoc  V6evalTool
<BR>
</PRE>

=end html
