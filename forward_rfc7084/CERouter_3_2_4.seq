#!/usr/bin/perl
#
# Copyright (C) 2015
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: CERouter_3_2_4.seq, v1.0 2015/03/26 weifen Exp $
#
################################################################

BEGIN{
	$V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_1 $';
}
use strict;
use V6evalTool;

use lib '../';
use DHCPv6_common;
use CPE6_config;
use CPE6;

if (!$ULA) {
	vLogHTML('<B>SKIP</B><BR>');
	exit $V6evalTool::exitNS;
}

#--------------------------------------------------------------#
# Initialization variables
#--------------------------------------------------------------#
my $IF0 = "Link0";
my $IF1 = "Link1";

vCapture($IF0);
vCapture($IF1);

#--------------------------------------------------------------#
# 1. WAN set up 
#--------------------------------------------------------------#
my $ra = $STATEFUL_CLIENT ? 'ra_MsetOset' : 'ra_MclearOset';
my ($ret,$tn2_prefix) = cpe_initialization($ra,$IF0,$IF1,$STATEFUL_CLIENT,0);
if ($ret != 0) {
    vLogHTML('<FONT COLOR="#FF0000">CPE initialization fail!</FONT><BR>');
    dhcpExitFail();
}

vSleep($WAIT_LAN_RA);
vClear($IF1);
#--------------------------------------------------------------#
# 2. Send RS message (tn1->nut)
#--------------------------------------------------------------#
vLogHTML('<B>==== TN2 <--> NUT: RS and RA Messages Exchange  ====</B><BR>');
vSend($IF1, 'rs_tn2_to_nut');

#--------------------------------------------------------------#
# 3. Wait RA message (nut->tn1)
#--------------------------------------------------------------#
my ($retra, %ra) = wait_for_ra($IF1, 10,1);
cpe6ExitFail if ($retra != 0);


# verify the prefix length and get prefix
my $count = 1;
my $base = 'Frame_Ether.Packet_IPv6.ICMPv6_RA.Opt_ICMPv6_Prefix';
my $prefix_opt = $base;
my $tn2_prefix;
my $ula_prefix = 0;
my $prefix_opt_num = $ra{"Frame_Ether.Packet_IPv6.ICMPv6_RA.Opt_ICMPv6_Prefix#"};
while (($count <= $prefix_opt_num) && ($ula_prefix == 0)){
  $tn2_prefix = $ra{$prefix_opt."."."Prefix"};
  if (($tn2_prefix =~ /fc/) || ($tn2_prefix =~ /fd/)) {
		vLogHTML("<B>RA includes the ULA prefix($tn2_prefix).</B></BR>");
    $ula_prefix = 1;
  }
  $count++;
  $prefix_opt = $base.$count;
}
if($ula_prefix == 0) {
  cpe6ExitError("<B><FONT COLOR=\"#FF0000\">RA does not include any ULA prefix.</FONT></B><BR>");
}

vCPP("-D\'ULA_PREFIX=\"$tn2_prefix\"\' ");
#--------------------------------------------------------------#
# 4. TN2 sends echo request using ULA prefix
#--------------------------------------------------------------#
vSend($IF1,'ereq_tn2_to_tn1');
my %ret = vRecv($IF0, 5 ,0 ,0, 'ereq_any');
if ($ret{'status'} == 0) {
	cpe6ExitError("<B><FONT COLOR=\"#FF0000\">Error! Receive forward echo request from CE Router.</FONT></B><BR>");
}
#--------------------------------------------------------------#
# End
#--------------------------------------------------------------#
vClear($IF0);
vStop($IF0);

vClear($IF1);
vStop($IF1);

cpe6ExitPass($IF0);


###############################################################################
__END__

=head1 NAME 

  Unique Local Address Forwarding

=head1 TARGET

  CE Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./CERouter_3_2_4.seq"> CERouter_3_2_4.seq</A> [-tooloption...] <BR>  -pkt  <A HREF="./CERouter_3_2_4.def"> CERouter_3_2_4.def</A> <BR>  -tooloption : v6eval tool option
<BR>
  See Also <A HREF="./CPE6_common.def"> CPE6_common.def </A> 
</PRE>

=end html

=head1 INITIALIZATION

=head1 TEST PROCEDURE

=begin html
<PRE>
<BR>
       TN2     NUT     TR1
        |       |       |
        |       |       |Initialize NUT(as a DHCPv6 requesting router)
        |       |       |
        |------>|       |<B>RS</B>
        |<------|       |<B>RA</B> (1*)
        |       |       |
        |------>|       |<B>Echo request to TN1 with ULA prefix</B>
        |       | - X ->| (2*)
        |       |       |
<BR>
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
<BR>
  (1*)PASS: TN2 receives RA with ULA prefix
  (2*)PASS: CE Router can not forward the echo request packet.
</PRE>

=end html

=head1 TERMINATION

=begin html
<PRE>
  N/A
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
  Also see RFC7084
<BR>
   ULA-4: By default, the IPv6 CE router MUST act as a site border
          router according to Section 4.3 of [RFC4193] and filter
          packets with local IPv6 source or destination addresses
          accordingly.
<BR>
</PRE>

=end html

=head1 SEE ALSO

=begin html
<PRE>
<BR>
  perldoc  V6evalTool
<BR>
</PRE>

=end html
