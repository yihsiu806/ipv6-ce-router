//
// Copyright (C) 2013
// Chunghwa Telecommunication Labratories (CHT-TL)
// All rights reserved.
//
// Redistribution and use of this software in source and binary
// forms, with or without modification, are permitted provided that
// the following conditions and disclaimer are agreed and accepted
// by the user:
// 
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in
//    the documentation and/or other materials provided with
//    the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project
//    which is related to this software (hereinafter referred to as
//    "project") nor the names of the contributors may be used to
//    endorse or promote products derived from this software without
//    specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written
//    notification to the copyrighters.
// 
// 5. The copyrighters, the project and the contributors may prohibit
//    the use of this software at any time.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
// IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
// $CHT-TL: CERouter_3_2_2_A.def, v 1.1 2014/10/09 weifen Exp $
//
////////////////////////////////////////////////////////////////

#include "../CPE6_common.def"

#define OFF_LINK_PREFIX "3ffe:501:ffff:200::"
#define FROM_ADDR v6merge(PREFIX_FROM_PD,64,v6(TN2_LINKLOCAL))
#define TO_ADDR v6merge(OFF_LINK_PREFIX,64,v6(TN3_LINKLOCAL))

//================================================================
//  Router Advertisement with prefix information option
//                       which M flags is 1 and O flag is 1
FEM_icmp6_ra(
	ra_MsetOset_local,
	_HETHER_tr1_to_allnodes,
	{
		_SRC(v6(TR1_LINKLOCAL));
		_DST(v6(_ALLNODES_MCAST_ADDR));
		HopLimit	= 255;
	},
	{
		CurHopLimit	= 64;
		MFlag		= 1;
		OFlag		= 1;
		LifeTime	= 0;
		ReachableTime	= _Default_AdvReachableTime;
		RetransTimer	= _Default_AdvRetransTimer;
		option		= opt_sll_tr1;
		option		= opt_prefix_LsetAclear;
	}
)

//================================================================
//  Router Advertisement with prefix information option
//                       which M flags is 0 and O flag is 1
FEM_icmp6_ra(
	ra_MclearOset_local,
	_HETHER_tr1_to_allnodes,
	{
		_SRC(v6(TR1_LINKLOCAL));
		_DST(v6(_ALLNODES_MCAST_ADDR));
		HopLimit	= 255;
	},
	{
		CurHopLimit	= 64;
		MFlag		= 0;
		OFlag		= 1;
		LifeTime	= 0;
		ReachableTime	= _Default_AdvReachableTime;
		RetransTimer	= _Default_AdvRetransTimer;
		option		= opt_sll_tr1;
		option		= opt_prefix_LsetAset;
	}
)


Opt_DHCPv6_IA_PD opt_IA_PD_PF1_64 {
        Time1		= IA_PD_TIME3;
        Time2		= IA_PD_TIME4;
        Identifier	= IA_PD_IDENTIFIER;
        option		= opt_IA_Delegate_PF1_64;
}

Opt_DHCPv6_IA_Prefix opt_IA_Delegate_PF1_64 {
        PreferredLifetime	= IA_PREFIX_PLTIME;
        ValidLifetime		= IA_PREFIX_VLTIME;
        PrefixLength		= 64;
        Prefix			= PF1_PREFIX0;
}

//================================================================
//  Echo Request
//  Echo Request: TN2 ----> NUT
FEM_icmp6_echo_request (
	ereq_tn2_to_tn3,
	_HETHER_tn2_to_nut,
	{
		_SRC(FROM_ADDR);
		_DST(TO_ADDR);
	},
	{
		payload = data8;
	}
)

//================================================================
//  Echo Request
//  Echo Request: NUT ----> WAN
FEM_icmp6_echo_request (
	ereq_nut_to_tn3,
	_HETHER_any,
	{
		_SRC(FROM_ADDR);
		_DST(TO_ADDR);
	},
	{
		payload = data8;
	}
)

//===== Neighbor Solicitation CE-Router -> any
FEM_icmp6_ns(
	ns_nut_to_tn3,
	_HETHER_any,
	{
		_SRC(any);
		_DST(any);
		HopLimit = 255;
	},
	{
		TargetAddress = TO_ADDR;
		option = stop;
	}
)