#!/usr/bin/perl
#
# Copyright (C) 2013, 2014, 2015
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: IP_PL_Odd.seq,v 1.1 2015/04/28  weifen Exp $
#
######################################################################
BEGIN {
	$V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_2 $';
}

use V6evalTool;
use CommonSPEC;

use lib '../';
use CPE6_config;
use DHCPv6_common;
use CPE6;

$pktdesc{'echo_request_odd'}	= 'Send Echo Request (Payload Length Odd)';
$pktdesc{'echo_reply_odd'}	= 'Recv Echo Reply';

$endStatus = $V6evalTool::exitPass;
$IF0 = 'Link0';
$IF1 = 'Link1';

vCapture($IF0);
vCapture($IF1);

#----- Initialization
my $ra = $STATEFUL_CLIENT ? 'ra_MsetOset' : 'ra_MclearOset';
my ($ret,$tn2_prefix) = cpe_initialization($ra,$IF0,$IF1,$STATEFUL_CLIENT,0);
if ($ret != 0) {
    cpe6ExitFail("<B>CPE initialization fail!</B><BR>");
}

#----- test
vSend($IF1, 'echo_request_odd');
%ret = nd_vRecv_EN($IF1, $CommonSPEC::wait_reply, 0, 0, 'echo_reply_odd');

if ($ret{'status'} == 0) {
	vLogHTML('OK<BR>');
} else {
	vLogHTML('Cannot receive Echo Reply<BR>');
	vLogHTML('<FONT COLOR="#FF0000">NG</FONT><BR>');
	$endStatus = $V6evalTool::exitFail;
}
#----- end test

vClear($IF1);
vClear($IF0);
vStop($IF0);
vStop($IF1);
if ($endStatus == $V6evalTool::exitFail) {
	cpe6ExitFail();
} else {
	cpe6ExitPass($IF0);
}


######################################################################
__END__

=head1 NAME

  Payload Length
  Part A: Payload Length Odd

=head1 TARGET

  CE-Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./IP_PL_Odd.seq">IP_PL_Odd.seq</A> [-tooloption ...] -pkt <A HREF="./IP_PL_Odddef">IP_PL_Odddef</A>
    -tooloption : v6eval tool option
</PRE>

=end html

=head1 INITIALIZATION

  Common Test Setup is performed at the beginning of this test part.

=head1 TEST PROCEDURE

Verify that a node properly processes the Payload Length field of recived packets.

   TN                          CE-Router
    |                           |
    |-------------------------->|
    |   Echo Request            |
    |                           |
    |                           |
    |<--------------------------|
    |   Echo Reply              |
    |                           |
    |                           |
    v                           v


  1. TN transmits an Echo Request that has an IPv6 header with a Payload Length of 0x33(51).
  2. Observe the packets transmitted by the CE-Router.

  Echo Request Data is:

        IPv6 Header
            Version            = 6
            Traffic Class      = 0
            FlowLabel          = 0
            PayloadLength      = 0x33
            NextHeader         = 58 (ICMPv6)
            SourceAddress      = TN Local Address
            DestinationAddress = CE-Router Link Local Address

        ICMP Echo Request
            Type           = 128 (Echo Request)
            Code           = 0
            Checksum       = (auto)
            Identifier     = 0xffff
            SequenceNumber = 1
            PayloadData    = {0x01, ... , 0x2b}


=head1 JUDGEMENT

  The CE-Router must generate an Echo Reply, indicating successful processing of the packets.

  PASS: Echo Reply Received

        IPv6 Header
            Version             = 6
            Traffic Class       = 0
            FlowLabel           = 0
            PayloadLength       = 0x33
            NextHeader          = 58 (ICMPv6)
            SourceAddress       = CE-Router Link Local Address
            Destination Address = TN Link Local Address

        ICMP Echo Reply
            Type           = 129 (Echo Reply)
            Code           = 0
            Checksum       = (auto)
            Identifier     = 0xffff (same as Echo Request)
            SequenceNumber = 1 (same as Echo Request)
            PayloadData    = {0x01, ... , 0x2b} (same as Echo Request)

=head1 CLEANUP

Common Test Cleanup

=cut

# =head1 REFERENCE
# 
# RFC2460
# 
# 3.  IPv6 Header Format
# 
#    Payload Length       16-bit unsigned integer.  Length of the IPv6
#                         payload, i.e., the rest of the packet following
#                         this IPv6 header, in octets.  (Note that any
#                         extension headers [section 4] present are
#                         considered part of the payload, i.e., included
#                         in the length count.)
# 

=pod

=head1 REFERENCE

=begin html
<BLOCKQUOTE>
<PRE>
[RFC 7084],G-1
[RFC 2460],Section 3
</PRE>
</BLOCKQUOTE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut

