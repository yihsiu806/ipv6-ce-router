#!/usr/bin/perl
#
# Copyright (C) 2013, 2014, 2015
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: V6LC_2_1_3.seq,v 1.3 2015/05/25  weifen Exp $
#
########################################################################
BEGIN{
	$V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_1 $';
}

use nd;

use lib '../';
use CPE6_config;
use DHCPv6_common;

$pktdesc{'ra_local_Lset'}
	= '    Send RA w/o SLL (on-link flag=1): '.
		'TR1 (link-local) -&gt; all-nodes multicast address';

$pktdesc{'ra_local_Lclear'}
	= '    Send RA w/o SLL (on-link flag=0): '.
		'TR1 (link-local) -&gt; all-nodes multicast address',

my @frames = ('tr1_mcast_ns_sll_LG', 'tr1_mcast_ns_sll_GG');

my $got_ns = 0;
my $plifetime = 20;
my $vlifetime = 20;
vCPP("-DIA_ADDR_PLTIME=$plifetime -DIA_ADDR_VLTIME=$vlifetime ");
startNdiscWorld($Link0);



vLogHTML('<FONT COLOR="#FF0000" SIZE="5"><U><B>Procedure</B></U></FONT><BR>');

# 1. TR1 transmits Router Advertisement A.
vClear($Link0);
if ($STATEFUL_CLIENT) {
#--------------------------------------------------------------#
# 1. Send RA(tr1->nut)
#--------------------------------------------------------------#
	my $ra = 'ra_local_Mset_Lset';
	vSend($Link0, $ra);
#--------------------------------------------------------------#
# 2. Wait until DHCPv6 Solicit arrives (nut->tr1)
#--------------------------------------------------------------#
	my ($retsol,%sol) = wait_for_solicit2($Link0, 30);
	cpe6ExitFail if($retsol != 0);
#--------------------------------------------------------------#
# 3. Send DHCPv6 Advertise message (tr1->nut)
#--------------------------------------------------------------#
	$SID_OPTION = "opt_SID_LLT_server1";
	$IA_NA_OPTION = "opt_IA_NA_Addr_woStatus";
	$IA_PD_OPTION = "opt_IA_PD_PF1";
	$DNS_SVR_OPTION = "opt_DNS_Name_Server1";
	$DNS_LST_OPTION = "opt_DNS_ServerSearchList";

	my ($retadv, %adv) = send_advertise($Link0, "advertise_server1_to_nut", \%sol, "");
	cpe6ExitFail if($retadv != 0);

#--------------------------------------------------------------#
# 4. Wait until DHCPv6 Request arrives (nut->tr1)
#--------------------------------------------------------------#
	my ($retreq,%req) = wait_for_request2($Link0, 30);
	cpe6ExitFail if($retreq != 0);
	vClear($Link0);

#--------------------------------------------------------------#
# 5. Send DHCPv6 Reply message (tr1->nut)
#--------------------------------------------------------------#
	my ($retrep, %rep) = send_reply($Link0, "reply_server1_to_nut", \%req, "-DIA_ADDR_PLTIME=$plifetime -DIA_ADDR_VLTIME=$vlifetime");
	cpe6ExitFail if($retrep != 0);

	vCPP("-D\'NUT_ADDR=NUT_GLOBAL_ADDR_From_IANA' ");
} else {
	vSend($Link0, 'ra_local_Lset');
}
ignoreDAD($Link0);

$NEED_COMMON_CLEANUP = 1;
$tr1_default = 1;



# 2. TR1 transmits Packet A.
#    TR1 should not respond to Neighbor Solicitations from the CE-Router.
vClear($Link0);
vSend($Link0, 'tr1_ereq_global');



# 3. Observe the packets transmitted by the CE-Router.
my %ret = vRecv($Link0, $RETRANS_TIMER * $MAX_MULTICAST_SOLICIT + 1,
		0, 0, @frames);

if($ret{'recvCount'}) {
	foreach my $frame (@frames) {
		if($ret{'recvFrame'} eq $frame) {
			$got_ns ++;
			flushBuffer($Link0, $TimeOut, $TimeOut);
		}
	}
}

unless($got_ns) {
	vLogHTML('<FONT COLOR="#FF0000"><B>Could\'t observe NS</B></FONT><BR>');
	exitInitFail();
}



# 4. TR1 transmits Router Advertisement A with the on-link (L) flag clear.
vClear($Link0);
if ($STATEFUL_CLIENT) {
	vSend($Link0, 'ra_local_Mset_Lclear');
} else {
	vSend($Link0, 'ra_local_Lclear');
}
ignoreDAD($Link0);



# 5. TR1 transmits Packet A.
#    TR1 should not respond to Neighbor Solicitations from the CE-Router.
$got_ns = 0;
vClear($Link0);
vSend($Link0, 'tr1_ereq_global');



# 6. Observe the packets transmitted by the CE-Router.
vRecv($Link0, $RETRANS_TIMER * $MAX_MULTICAST_SOLICIT + 1, 0, 0, @frames);

if($ret{'recvCount'}) {
	foreach my $frame (@frames) {
		if($ret{'recvFrame'} eq $frame) {
			$got_ns ++;
			flushBuffer($Link0, $TimeOut, $TimeOut);
		}
	}
}

unless($got_ns) {
	vLogHTML('<FONT COLOR="#FF0000"><B>Could\'t observe NS</B></FONT><BR>');
	exitFail();
}

exitPass();
#NOTREACHED



#
# perldoc
#
########################################################################
__END__

=head1 NAME

  Prefix Information Option Processing, On-link Flag

=head1 Purpose

   Verify that a host properly processes the on-link flag of a Prefix Information Option.

=head1 References

[RFC 7084],W-1
[RFC 4861],Section 6.3.4

=head1 Resource Requirements

  * Packet generator
  * Monitor to capture packets

=head1 Test Setup

	Common Test Setup 1.2 is performed at the beginning of this test part. 
	The Common Test Cleanup procedure is performed after each part.

=begin html

<BLOCKQUOTE>

<TABLE BORDER>
<Caption>Router Advertisement A</Caption>
<TR>
<TD>
	IPv6 Header<br>
	Next Header: 58<br>
	Source Address: TR1's Link-local Address<br>
	Destination Address:<br>
	All-nodes Multicast Address
</TD>
</TR>
<TR>
<TD>
	Router Advertisement<br>
	Router Lifetime: 100 seconds<br>
	Reachable Time: 10 seconds<br>
	Retransmit Interval: 1 second<br>
</TD>
</TR>

<TR>
<TD>
        Prefix Option<br>
	"on-link" (L) flag: 1<br>
	Valid Lifetime: 20 seconds<br>
	Preferred Lifetime: 20 seconds<br>
	Prefix: TR1's Global Prefix<br>
</TD>
</TR>
</TABLE>

<br>

<TABLE BORDER>
<Caption>Neighbor Advertisement C</Caption>
<TR>
<TD>
        IPv6 Header<br>
        Next Header: 58<br>
	Source Address: TR1's Global Address<br>
	Destination Address: CE-Router's Link-local Address
</TD>
</TR>
<TR>
<TD>ICMPv6 Echo Request</TD>
</TR>
</TABLE>

</BLOCKQUOTE>

=end html


=head1 Procedure

  1. TR1 transmits Router Advertisement A.
  2. TR1 transmits Packet A. TR1 should not respond to Neighbor Solicitations from the CE-Router.
  3. Observe the packets transmitted by the CE-Router.
  4. TR1 transmits Router Advertisement A with the on-link (L) flag clear.
  5. TR1 transmits Packet A. TR1 should not respond to Neighbor Solicitations from the CE-Router.
  6. Observe the packets transmitted by the CE-Router.

=head1 Observable Results

  Step 3: 
  In response to Packet A, the CE-Router should transmit 3 Neighbor Solicitations with a Target
  Address of TR1's global address.

  Step 6: 
  In response to Packet A, the CE-Router should transmit 3 Neighbor Solicitations with a Target
  Address of TR1's global address.

=head1 Possible Problems

  * None. 

=cut

