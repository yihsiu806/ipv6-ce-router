//
// Copyright (C) 2013
// Chunghwa Telecommunication Labratories (CHT-TL)
// All rights reserved.
// 
// Redistribution and use of this software in source and binary
// forms, with or without modification, are permitted provided that
// the following conditions and disclaimer are agreed and accepted
// by the user:
// 
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in
//    the documentation and/or other materials provided with
//    the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project
//    which is related to this software (hereinafter referred to as
//    "project") nor the names of the contributors may be used to
//    endorse or promote products derived from this software without
//    specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written
//    notification to the copyrighters.
// 
// 5. The copyrighters, the project and the contributors may prohibit
//    the use of this software at any time.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
// IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
// $CHT-TL: R_UnrecognizedRoutingTypeIN_RH0.def,v 1.0 2013/08/19 weifen Exp $
//

//
// Network topology
//
//      TN3 -----> Router1 -----> Router2 ----->   TR1   -----> CE-Router
//          H1  R1         R1  R2         R2  R3         R3  H2
//        NET_GLOBAL6    NET_GLOBAL4    NET_GLOBAL2    NET_GLOBAL0
//

#define	IS_ROUTER_LINK0		1

#include "./CommonHost.def"

#define H1_H1R1_ADDR v6(_GLOBAL6A0N_UCAST_ADDR)
#define R1_H1R1_ADDR v6(_GLOBAL6A1N_UCAST_ADDR)
#define R1_R1R2_ADDR v6(_GLOBAL4A0N_UCAST_ADDR)
#define R2_R1R2_ADDR v6(_GLOBAL4A1N_UCAST_ADDR)
#define R2_R2R3_ADDR v6(_GLOBAL2A0N_UCAST_ADDR)
#define R3_R2R3_ADDR v6(_GLOBAL2A1N_UCAST_ADDR)
#define R3_R3H2_ADDR TN_GL0_ADDR
#define H2_R3H2_ADDR NUT_ADDR

//
// Routing Header
//

Hdr_Routing rh_to_link0 {
	NextHeader = 58;	// ICMP
	RoutingType = 0;
	SegmentsLeft = 1;
	Address = R1_H1R1_ADDR;
	Address = R2_R1R2_ADDR;
	Address = R3_R2R3_ADDR;
}


Hdr_Routing rh_reply_rv {
	NextHeader = 58;	// ICMP
	SegmentsLeft = 3;
	Address = R3_R2R3_ADDR;
	Address = R2_R1R2_ADDR;
	Address = R1_H1R1_ADDR;
}


//======================================================================
//
// Payload Data
//

Payload echo_data8 {
	data = {1, 2, 3, 4, 5, 6, 7, 8};
}


//======================================================================
//
// Echo Request with RH
//

FEM_icmp6_echo_request_exth(
	echo_request_rh,
	_HETHER_tr1_to_nut,
	{
		_SRC(H1_H1R1_ADDR);
		_DST(H2_R3H2_ADDR);
		HopLimit = 255;
	},
	{
		header = _HDR_IPV6_NAME(echo_request_rh);
		exthdr = rh_to_link0;
		upper = _ICMPV6_NAME(echo_request_rh);
	},
	{
		payload = echo_data8;
	}
)


//======================================================================
//
// Echo Reply
//

FEM_icmp6_echo_reply(
	echo_reply,
	_HETHER_nut_to_tr1,
	{
		_SRC(H2_R3H2_ADDR);
		_DST(H1_H1R1_ADDR);
	},
	{
		payload = echo_data8;
	}
)

FEM_icmp6_echo_reply_exth(
	echo_reply_rh_rv,
	_HETHER_nut_to_tr1,
	{
		_SRC(H2_R3H2_ADDR);
		_DST(H1_H1R1_ADDR);
	},
	{
		header = _HDR_IPV6_NAME(echo_reply_rh_rv);
		exthdr = rh_reply_rv;
		upper = _ICMPV6_NAME(echo_reply_rh_rv);
	},
	{
		payload = echo_data8;
	}
)


//======================================================================
//
// ICMP Parameter Problem
//

FEM_icmp6_parameter_problem(
	icmperr,
	_HETHER_nut_to_tr1,
	{
		_SRC(H2_R3H2_ADDR);
		_DST(H1_H1R1_ADDR);
	},
	{
		Code	= 0;	// errorneous header field encountered
		Pointer	= 42;	// (40+2)
		payload	= any;
	}
)

//===== Neighbor Solicitation CE-Router -> TR1
FEM_icmp6_ns(
	ns_nut_to_tn3,
	_HETHER_any,
	{
		_SRC(any);
		_DST(any);
		HopLimit = 255;
	},
	{
		TargetAddress = H1_H1R1_ADDR;
		option = stop;
	}
)

//----------------------------------------------------------------------
// TR1  (link local address)--> CE-Router (link local address)
// TargetAddress: TR1's link local address
//----------------------------------------------------------------------

FEM_icmp6_na(
	na_local,
	_HETHER_tr1_to_nut,
	{
		_SRC(v6(TR1_LINKLOCAL));
		_DST(nutv6());
		HopLimit = 255;
	},
	{
		RFlag = 1;
		SFlag = 1;
		OFlag = 1;
		TargetAddress = H1_H1R1_ADDR;
		option = opt_tll_tr1;
	}
)