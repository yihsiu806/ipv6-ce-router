#!/usr/bin/perl
#
# Copyright (C) 2013, 2014, 2015
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: C_RFC3633_MaxRetransCountReqMsg_10_2_3_D.seq,v 1.2 2015/04/24 weifen Exp $
#
########################################################################

BEGIN{
	$V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_2 $';
}
use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use CPE6_config;
use Client_pktdesc;
use CPE6;

my $type=$V6evalTool::NutDef{Type};
if($type ne 'router') {
	vLogHTML('<FONT COLOR="#FF0000">This test does not support Host!</FONT>');
	exit $V6evalTool::exitRouterOnly;
}

#--------------------------------------------------------------#
# Initialization variables
#--------------------------------------------------------------#
my $IF0 = "Link0";
my $IF1 = "Link1";
my $rc = 0;
my $MRC = $REQ_MAX_RC;

vCapture($IF0);
vCapture($IF1);
#--------------------------------------------------------------#
# Initialize DHCPv6 Client
#--------------------------------------------------------------#
vSend($IF0,'ra_MclearOset');
#--------------------------------------------------------------#
#1.  Wait until Solicit arrives 
#--------------------------------------------------------------#
my ($retsol,%sol) = wait_for_solicit($IF0,30) ;
if($retsol != 0){
	dhcpExitFail;
}
vClear($IF0);
#--------------------------------------------------------------#
# 2. send Advertise message 
#--------------------------------------------------------------#
$SID_OPTION = "opt_SID_LLT_server1";
$IA_NA_OPTION = "opt_IA_NA_Addr_woStatus";
$IA_PD_OPTION = "opt_IA_PD_Prefix2";
my ($retadv, %adv) = send_advertise($IF0, "advertise_server1_to_nut", \%sol, "");
if($retadv != 0){
	dhcpExitFail;
}
#--------------------------------------------------------------#
#3.  Wait until Request arrives 
#--------------------------------------------------------------#

my ($retreq1,%req1) = wait_for_request($IF0,30);
if($retreq1 != 0){
	dhcpExitFail;
}

#--------------------------------------------------------------#
#4.  Caputure messages until RC == MRC
#--------------------------------------------------------------#
vLogHTML("<FONT COLOR=\"#FF0000\">MRC is $MRC</FONT><BR>");
my ($retreq2, %req2) = (1, ());
for($rc = 2; $rc <= $MRC; $rc++) {
	($retreq2,%req2) = wait_for_request($IF0, 2*$REQ_MAX_RT);
		if($retreq2 != 0){
			dhcpExitFail;
		}
	vLogHTML("<FONT COLOR=\"#FF0000\"> Retransmission Count is $rc. </FONT><BR>");
}

#--------------------------------------------------------------#
#5.  Caputure messages one more time (Acceptable)
#--------------------------------------------------------------#
my ($retreq2,%req2) = wait_for_request($IF0, 2*$REQ_MAX_RT);
if($retreq2 == 0){
	vLogHTML("<FONT COLOR=\"#FF0000\"> Retransmission Count is $rc. Still acceptable.</FONT><BR>");
}

#--------------------------------------------------------------#
#6.  Caputure messages one more time
#--------------------------------------------------------------#
my ($retreq2,%req2) = wait_for_request($IF0, 2*$REQ_MAX_RT);
if($retreq2 == 0){
	vLogHTML('<FONT COLOR="#FF0000">Beyond REQ_MAX_RC </FONT><BR>');
	dhcpExitFail;
}

#--------------------------------------------------------------#
# 7. Check RA sent from CE Router
#--------------------------------------------------------------#
vSleep($WAIT_LAN_RA);
vClear($IF1);
vSend($IF1, 'rs_tn2_to_nut');
my ($retra, %ra) = wait_for_ra($IF1, 10, 0);
dhcpExitFail if ($retra != 0);

my $base = 'Frame_Ether.Packet_IPv6.ICMPv6_RA.Opt_ICMPv6_Prefix';
my $prefix_opt = $base;
if (defined $ra{$base."#"}) {
  my $prefix_opt_num = $ra{$base."#"};
  my $count = 1;
  my $tn2_prefix;
  while ($count <= $prefix_opt_num){
    $tn2_prefix = $ra{$prefix_opt."."."Prefix"};
    if ($tn2_prefix =~ /2001:db8:ffff/){
      my $pl_time = $ra{$prefix_opt."."."PreferredLifetime"};
      my $vl_time = $ra{$prefix_opt."."."ValidLifetime"};
      if (($pl_time != 0) || ($vl_time != 0)) {
	dhcpExitError("<B>RA includes invalid prefix:$tn2_prefix with lifetime larger than 0 !</B><BR>");
      }
    }
    $count++;
  }
}

vClear($IF0);
vStop($IF0);
vClear($IF1);
vStop($IF1);
dhcpExitPass;
###############################################################################
__END__

=head1 NAME 

  Transmission of Request Messages for Prefix Delegation
  Part C: Maximum Retransmission Count of Request messages

=head1 TARGET

  CE-Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./C_RFC3633_MaxRetransCountReqMsg_10_2_3_D.seq"> C_RFC3633_MaxRetransCountReqMsg_10_2_3_D.seq</A> [-tooloption...] <BR>  -pkt  <A HREF="./C_RFC3633_MaxRetransCountReqMsg_10_2_3_D.def"> C_RFC3633_MaxRetransCountReqMsg_10_2_3_D.def</A> <BR>  -tooloption : v6eval tool option
<BR>
  See Also <A HREF="./DHCPv6.def"> DHCPv6.def </A> 
</PRE>

=end html

=head1 INITIALIZATION

=begin html
  <ul>
  <li><STRONG>Network Topology</STRONG></li> 
   <PRE>
          CE-Router(Client)
          |           
          |                        
Link0   --+--------+------------------------ 3ffe:501:ffff:100::/64
                   |
                   |          
                   TN(Server) 
   </PRE>
  </ul>
  <ul>  
  <li><STRONG>Verification Points</STRONG></li><br>
   <PRE>
   The client transmits the message using the following parameters:<BR>
     IRT   REQ_TIMEOUT <BR>
     MRT   REQ_MAX_RT <BR>
     MRC   REQ_MAX_RC <BR>
     MRD   0 <BR>
   The client retransmits Request for MRC times.  
  </PRE>
  </ul>
  <ul> 
  <li><STRONG>Configurations</STRONG></li><br>
   <BR>
    <TABLE BORDER="1">
    <TR>
    <TD><TT>Device Name</TT></TD>
    <TD><TT>Device Type</TT></TD>
    <TD><TT>Interface</TT></TD>
    <TD><TT>Assigned Prefix</TT></TD>
    <TD><TT>Link Local Addr</TT></TD>
    <TD><TT>MAC Addr</TT></TD>
    </TR>
    <TR>
    <TD><TT>Client</TT></TD>
    <TD><TT>CE-Router</TT></TD>
    <TD><TT>Link0</TT></TD>
    <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
    <TD><TT>CE-Router's Linklocal address</TT></TD>
    <TD><TT>CE-Router's MAC address</TT></TD>
    </TR>
    <TR>
    <TD><TT>Server</TT></TD>
    <TD><TT>TN</TT></TD>
    <TD><TT>Link0</TT></TD>
    <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
    <TD><TT>fe80::200:ff:fe00:a1a1</TT></TD>
    <TD><TT>00:00:00:00:a1:a1</TT></TD>
    </TR>
    </TABLE>
  </ul>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
<BR>
    TN   CE-Router  TR
     |       |       |
     |       |       |Initialize CE-Router(as a DHCPv6 client)
     |       |       |
     |       | ----> |<B>Solicit</B>
     |       | <---- |<B>Advertise</B>
     |       | ----> |<B>Request</B>
     |       | <---- |<B>Reply</B>
     |       |       |
     .       .       .Retransmit REQ_MAX_RC times.
     |       |       |
     |       | ----> |<B>Request</B> (12*)
     |       |       |
     | ----> |       | RS
     | <---- |       | RA (14*)
     |       |       |
<BR>
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
<BR>  
  (12*)PASS: The CE-Router must terminate the message exchange after the transmission of REQ_MAX_RC (10) DHCPv6 Request messages. 
  (14*)PASS: The CE-Router must transmit a Router Advertisement that does not contain a PIO with a prefix from the IA_PD on the LAN network.
</PRE>

=end html

=head1 TERMINATION

=begin html
<PRE>
  N/A
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
[RFC 7084],W-1
[RFC 3633],Section 7 and 12.1
[RFC 3315],Section 5.5, 14, 18.1.1 and 22.9
</PRE>

=end html

=head1 SEE ALSO

=begin html
<PRE>
<BR>
  perldoc  V6evalTool
<BR>
</PRE>

=end html

