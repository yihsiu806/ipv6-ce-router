#!/usr/bin/perl
#
# Copyright (C) 2013, 2014, 2015
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: C_RFC3633_RelMsg_10_2_6_A.seq,v 1.2 2015/04/24 weifen Exp $
#
########################################################################

BEGIN{
	$V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_2 $';
}
use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use CPE6_config;
use Client_pktdesc;

dhcpExitNS if(!($DHCP_RELEASE));

#--------------------------------------------------------------#
# Initialization variables
#--------------------------------------------------------------#
my $IF0_NUT = $V6evalTool::NutDef{"Link0_device"};
my $IF0 = "Link0";
my ($plifetime, $vlifetime) = (100, 200);
#my ($plifetime, $vlifetime) = (30, 60);
my ($time1, $time2) = (0.5*$plifetime, 0.8*$plifetime);
my $timeout = $time1 + 5;
my $ret = 1;


vCapture($IF0);
#--------------------------------------------------------------#
# Initialize DHCPv6 Client
#--------------------------------------------------------------#
vSend($IF0,'ra_MsetOset');
#--------------------------------------------------------------#
#1.  Wait until Solicit arrives 
#--------------------------------------------------------------#
my ($retsol,%sol1) = wait_for_solicit($IF0,30);
if($retsol != 0){
	dhcpExitFail;
}
vClear($IF0);
#--------------------------------------------------------------#
#2. Send Advertise to reply to Solicit
#--------------------------------------------------------------#
$SID_OPTION = "opt_SID_LLT_server1";
$IA_PD_OPTION = "opt_IA_PD_Prefix2";
$IA_NA_OPTION = "opt_IA_NA_Addr_woStatus";
$DNS_SVR_OPTION = "opt_DNS_Name_Server1";
$DNS_LST_OPTION = "opt_DNS_ServerSearchList";

my ($retadv, %adv2) = send_advertise($IF0, "advertise_server1_to_nut", \%sol1, "");
if($retadv != 0){
	dhcpExitFail;
}
#--------------------------------------------------------------#
#3.  Wait until Request arrives 
#--------------------------------------------------------------#
my ($retreq, %req3) = wait_for_request($IF0,30);
if($retreq != 0){
	dhcpExitFail;
}
vClear($IF0);
#--------------------------------------------------------------#
#4. send Reply message
#--------------------------------------------------------------#
$IA_PD_OPTION = "opt_IA_PD_Prefix2";
$StatusCode_OPTION = "opt_StatusCode";
$IA_NA_OPTION = "opt_IA_NA_Addr_woStatus";

my ($retrep, %rep4) = send_reply($IF0, "reply_server1_to_nut", \%req3, "-DIA_NA_TIME1=$time1 -DIA_NA_TIME2=$time2 -DIA_ADDR_PLTIME=$plifetime -DIA_ADDR_VLTIME=$vlifetime");
if($retrep != 0){
	dhcpExitFail;
}

#--------------------------------------------------------------#
# CE-Router Releases prefix(es)
#--------------------------------------------------------------#
$ret = vRemote("dhcp6c.rmt", "release", "link0=$IF0_NUT");
if($ret != 0) {
    vLogHTML('<FONT COLOR="#FF0000">Release Address failed !</FONT><BR>');
    dhcpExitFail;
};

#--------------------------------------------------------------#
#7. Wait until Release arrives 
#--------------------------------------------------------------#
my ($retrel,%rel7) = wait_for_release2($IF0, $timeout,2);
if($retrel != 0){
	dhcpExitFail;
}

#--------------------------------------------------------------#
# Judge
#--------------------------------------------------------------#

# Judge SID,CID,IA_PD
$ret = options_exist(\%rel7,($CMP_SID|$CMP_CID|$CMP_IA_PD));
if($ret != 0){
        dhcpExitFail;
}
# compare duid
if (0 != compare_id(\%rep4, \%rel7, ($CMP_SID))){
        dhcpExitError("<B>The option error!Do not same as the previous message</B><BR>");
}

# compare prefix
if (0 != compare_prefix(\%rep4, \%rel7, ($CMP_IA_PREFIX))){
        dhcpExitError("<B>The option error!Do not same as the previous message</B><BR>");
}


# A "msg-type" field set to the value of RELEASE(8)
my $base = "Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_Release";
my $msgtype =$rel7{"$base"."."."Type"};
vLogHTML("<B> Type is $msgtype </B><BR>");
if($msgtype != 8){
        vLogHTML('<FONT COLOR="#FF0000">msg-type is mismatch.</FONT>
<BR>');
        dhcpExitFail;
}

# A header containing a Transaction ID
my $identifier =$rel7{"$base"."."."Identifier"};
vLogHTML("<B> Identifier is $identifier </B><BR>");
if($identifier == 0){
        vLogHTML('<FONT COLOR="#FF0000">Identifier is not non-zero value.</FONT><BR>');
        dhcpExitFail;
}

vClear($IF0);
vStop($IF0);
dhcpExitPass;
###############################################################################
__END__

=head1 NAME 

  Transmission of Release Messages for Prefix Delegation
  Part A: Release message format 

=head1 TARGET

  CE-Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./C_RFC3633_RelMsg_10_2_6_A.seq"> C_RFC3633_RelMsg_10_2_6_A.seq</A> [-tooloption...] <BR>  -pkt  <A HREF="./C_RFC3633_RelMsg_10_2_6_A.def"> C_RFC3633_RelMsg_10_2_6_A.def</A> <BR>  -tooloption : v6eval tool option
<BR>
  See Also <A HREF="../DHCPv6.def"> DHCPv6.def </A> 
</PRE>

=end html

=head1 INITIALIZATION

=begin html
  <ul>
  <li><STRONG>Network Topology</STRONG></li> 
   <PRE>
          CE-Router(Client)
          |           
          |                        
Link0   --+--------+------------------------ 3ffe:501:ffff:100::/64
                   |
                   |          
                   TN(Server) 
    </PRE>
  </ul>
  <ul>
  <li><STRONG>Verification Points</STRONG></li><br>
   <PRE>
   The client sets the "msg-type" field to RELEASE.<BR>
   The client generates a transaction ID and places this value in the
   "transaction-id" field.<BR>
   The client places the identifier of the server that allocated the
   address(es) in a Server Identifier option.<BR>
   The client MUST include a Client Identifier option to identify itself
   to the server. <BR>
   The client includes options containing the IAs for the addresses it
   is releasing in the "options" field.  The addresses to be released
   MUST be included in the IAs. <BR>
   </PRE>
  </ul>
  <ul> 
  <li><STRONG>Configurations</STRONG></li><br>
  <BR>
    <TABLE BORDER="1">
    <TR>
    <TD><TT>Device Name</TT></TD>
    <TD><TT>Device Type</TT></TD>
    <TD><TT>Interface</TT></TD>
    <TD><TT>Assigned Prefix</TT></TD>
    <TD><TT>Link Local Addr</TT></TD>
    <TD><TT>MAC Addr</TT></TD>
    </TR>
    <TR>
    <TD><TT>Client</TT></TD>
    <TD><TT>CE-Router</TT></TD>
    <TD><TT>Link0</TT></TD>
    <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
    <TD><TT>CE-Router's Linklocal address</TT></TD>
    <TD><TT>CE-Router's MAC address</TT></TD>
    </TR>
    <TR>
    <TD><TT>Server</TT></TD>
    <TD><TT>TN</TT></TD>
    <TD><TT>Link0</TT></TD>
    <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
    <TD><TT>fe80::200:ff:fe00:a1a1</TT></TD>
    <TD><TT>00:00:00:00:a1:a1</TT></TD>
    </TR>
    </TABLE>
  </ul>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
<BR>
   CE-Router    TR
        |       |
        |       |Initialize CE-Router (as a DHCPv6 Client)
        |       |
        | ----> |<B>Solicit</B> 
        | <---- |<B>Advertise</B> 
        | ----> |<B>Request</B> 
        | <---- |<B>Reply</B> 
        |       |
        |       |CE-Router initiates the Release-Reply Exchange
        |       |
        | ----> |<B>Release</B> (7*)
        |       |
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
<BR>  
  (7*)PASS: CE-Router transmits Release message which conforms to Verification Points.
</PRE>

=end html

=head1 TERMINATION

=begin html
<PRE>
  N/A
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
[RFC 7084],W-1
[RFC 3315],Section 5.5, 14 and 18.1.6
[RFC 3633],Section 12.1
</PRE>

=end html

=head1 SEE ALSO

=begin html
<PRE>
<BR>
  perldoc  V6evalTool
<BR>
</PRE>

=end html

