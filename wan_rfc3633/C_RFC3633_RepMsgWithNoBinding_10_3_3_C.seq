#!/usr/bin/perl
#
# Copyright (C) 2013, 2014, 2015
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: C_RFC3633_RepMsgWithNoBinding_10_3_3_C.seq,v 1.2 2015/03/24 weifen Exp $
#
########################################################################

BEGIN{
	$V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_2 $';
}
use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use CPE6_config;
use Client_pktdesc;
use CPE6;

my $type=$V6evalTool::NutDef{Type};
if($type ne 'router') {
	vLogHTML('<FONT COLOR="#FF0000">This test does not support Host!</FONT>');
	exit $V6evalTool::exitRouterOnly;
}

#--------------------------------------------------------------#
# Initialization variables
#--------------------------------------------------------------#
my $IF0 = "Link0";
my $IF1 = "Link1";
my ($plifetime, $vlifetime) = (100, 200);
#my ($plifetime, $vlifetime) = (30, 60);
my ($time1, $time2) = (0.5*$plifetime, 0.8*$plifetime);
my $timeout = $time1 + 5;
my ($ia_t1,$ia_t2,$ia_pltime,$ia_vltime) = (0xffffffff,0xffffffff,0xffffffff,0xffffffff);

vCapture($IF0);
vCapture($IF1);
#--------------------------------------------------------------#
# Initialize DHCPv6 Client
#--------------------------------------------------------------#
vSend($IF0,'ra_MsetOset');
#--------------------------------------------------------------#
#1.  Wait until Solicit arrives 
#--------------------------------------------------------------#
my ($retsol,%sol) = wait_for_solicit($IF0,30);
if($retsol != 0){
	dhcpExitFail;
}
#vClear($IF0);
#--------------------------------------------------------------#
#2. Send Advertise to reply to Solicit
#--------------------------------------------------------------#
$SID_OPTION = "opt_SID_LLT_server1";
$IA_PD_OPTION = "opt_IA_PD_Prefix2";
$IA_NA_OPTION = "opt_IA_NA_Addr_woStatus";
$DNS_SVR_OPTION = "opt_DNS_Name_Server1";
$DNS_LST_OPTION = "opt_DNS_ServerSearchList";

#my ($plifetime, $vlifetime) = (100, 200);
#my ($time1, $time2) = (0.5*$plifetime, 0.8*$plifetime);
#my ($time1, $time2) = (50, 80);
#my ($retadv, %adv) = send_advertise($IF0, "advertise_server1_to_nut", \%sol, "-DIA_PD_TIME1=$time1 -DIA_PD_TIME2=$time2 -DIA_PREFIX_PLTIME=$plifetime -DIA_PREFIX_VLTIME=$vlifetime ");
my ($retadv, %adv) = send_advertise($IF0, "advertise_server1_to_nut", \%sol, "");
if($retadv != 0){
	dhcpExitFail;
}
#--------------------------------------------------------------#
#3.  Wait until Request arrives 
#--------------------------------------------------------------#
my ($retreq1, %req1) = wait_for_request($IF0,30);
if($retreq1 != 0){
	dhcpExitFail;
}

#vClear($IF0);
#--------------------------------------------------------------#
#4. send Reply message
#--------------------------------------------------------------#
$IA_PD_OPTION = "opt_IA_PD_Prefix2";
#$StatusCode_OPTION = "opt_StatusCode";
$IA_NA_OPTION = "opt_IA_NA_Addr_woStatus";

#my ($plifetime, $vlifetime) = (60, 90);
#my ($time1, $time2) = (0.5*$plifetime, 0.8*$plifetime);
#my ($time1, $time2) = (50, 80);
#my ($retrep1, %rep1) = send_reply($IF0, "reply_server1_to_nut", \%req1, "-DIA_PD_TIME1=$time1 -DIA_PD_TIME2=$time2 -DIA_PREFIX_PLTIME=$plifetime -DIA_PREFIX_VLTIME=$vlifetime ");
my ($retrep1, %rep1) = send_reply($IF0, "reply_server1_to_nut", \%req1, "-DIA_NA_TIME1=$ia_t1 -DIA_NA_TIME2=$ia_t2 -DIA_ADDR_PLTIME=$ia_pltime -DIA_ADDR_VLTIME=$ia_vltime");
if($retrep1 != 0){
	dhcpExitFail;
}

#--------------------------------------------------------------#
#5. Wait until Renew arrives 
#--------------------------------------------------------------#
# Judge CID,SID option
my ($retren1,%ren1) = wait_for_renew($IF0, $timeout,2);
if($retren1 != 0){
	dhcpExitFail;
	}

# check recvtime
if (0 != check_RecvTime(\%rep1, \%ren1, $time1)){
        dhcpExitError("<B>The Received time error! </B><BR>");
}

my $count = $ren1{"recvCount"};
my $ren_time = $ren1{"recvTime$count"};
#--------------------------------------------------------------#
#6. send Reply message
#--------------------------------------------------------------#
my $base1 = "Frame_Ether\.Packet_IPv6\.Upp_UDP\.Udp_DHCPv6_Renew\.Opt_DHCPv6_IA_NA";
if (defined($ren1{"$base1"})){
  $IA_NA_OPTION = "opt_IA_NA_Addr_woStatus";
} else {
  $IA_NA_OPTION = undef;
}

$IA_PD_OPTION = "opt_IA_PD_StatusOnly";
my $cppstr = "-DIA_PREFIX_STATUSCODE=3";
my ($retrep2, %rep2) = send_reply($IF0, "reply_server1_to_nut", \%ren1, "$cppstr");
if($retrep2 != 0){
        dhcpExitFail;
}

#--------------------------------------------------------------#
#7.  Wait until Request arrives 
#--------------------------------------------------------------#
my ($retren2,%ren2) = wait_for_renew($IF0, $timeout,2);
if($retren2 == 0){
	dhcpExitFail;
}

my ($retreq2, %req2) = wait_for_request2($IF0,30);
if($retreq2 != 0){
        dhcpExitFail;
}

$count = $req2{"recvCount"};
my $req_time = $req2{"recvTime$count"};

# A Server Identifier option (containing DUID)
if (0 != options_exist(\%req2,$CMP_SID)){
        dhcpExitError("Can not find necessary(SID) option! ");
}
if(0 != (compare_id(\%req1, \%req2, ($CMP_SID)))){
         dhcpExitFail();
}

vClear($IF0);
vStop($IF0);
vClear($IF1);
vStop($IF1);
dhcpExitPass;
###############################################################################
__END__

=head1 NAME 

  Reception of A Reply Message for Prefix Delegation
  Part K: Reply message contains NoBinding in response to a Renew message

=head1 TARGET

  CE-Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./C_RFC3633_RepMsgWithNoBinding_10_3_3_C.seq"> C_RFC3633_RepMsgWithNoBinding_10_3_3_C.seq</A> [-tooloption...] <BR>  -pkt  <A HREF="./C_RFC3633_RepMsgWithNoBinding_10_3_3_C.def"> C_RFC3633_RepMsgWithNoBinding_10_3_3_C.def</A> <BR>  -tooloption : v6eval tool option
<BR>
  See Also <A HREF="../DHCPv6.def"> DHCPv6.def </A> 
</PRE>

=end html

=head1 INITIALIZATION

=begin html
  <ul>
  <li><STRONG>Network Topology</STRONG></li> 
   <PRE>
          CE-Router(Client)
          |           
          |                        
Link0   --+--------+------------------------ 3ffe:501:ffff:100::/64
                   |
                   |          
                   TN(Server) 
   </PRE>
  </ul>
  <ul>  
  <li><STRONG>Verification Points</STRONG></li><br>
   <PRE>
   When the client receives a Reply message in response to a Renew or
   message, the client examines each IA independently.  For each
   IA in the original Renew message, the client sends a Request message
   if the IA contained a Status Code option with the NoBinding status
   (and does not send any additional Renew messages)
   </PRE>
  </ul> 
  <ul>
  <li><STRONG>Configurations</STRONG></li><br>
  <BR>
    <TABLE BORDER="1">
    <TR>
    <TD><TT>Device Name</TT></TD>
    <TD><TT>Device Type</TT></TD>
    <TD><TT>Interface</TT></TD>
    <TD><TT>Assigned Prefix</TT></TD>
    <TD><TT>Link Local Addr</TT></TD>
    <TD><TT>MAC Addr</TT></TD>
    </TR>
    <TR>
    <TD><TT>Client</TT></TD>
    <TD><TT>CE-Router</TT></TD>
    <TD><TT>Link0</TT></TD>
    <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
    <TD><TT>CE-Router's Linklocal address</TT></TD>
    <TD><TT>CE-Router's MAC address</TT></TD>
    </TR>
    <TR>
    <TD><TT>Server</TT></TD>
    <TD><TT>TN</TT></TD>
    <TD><TT>Link0</TT></TD>
    <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
    <TD><TT>fe80::200:ff:fe00:a1a1</TT></TD>
    <TD><TT>00:00:00:00:a1:a1</TT></TD>
    </TR>
    </TABLE>
  </ul>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
<BR>
    TN   CE-Router  TR
     |       |       |
     |       |       |Initialize CE-Router(as a DHCPv6 client)
     |       |       |
     |       | ----> |<B>Solicit</B>
     |       | <---- |<B>Advertise</B>
     |       | ----> |<B>Request</B>
     |       | <---- |<B>Reply</B> w/IA_PD option (T1=50, T2=80)
     |       |       |
     |       |       |Before T1 time expires  
     |       |       |
     |       | ----> |<B>Renew</B>
     |       | <---- |<B>Reply</B> w/IA option(Status code=NoBinding)
     |       | ----> |<B>Request</B> (1*)
     |       |       |
     |       |       |
<BR>
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
<BR>  
  (1*)PASS: CE-Router must not transmit any additional DHCPv6 Renew messages but must transmits Request message.
</PRE>

=end html

=head1 TERMINATION

=begin html
<PRE>
  N/A
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
[RFC 7084],W-1
[RFC 3315],Section 18.1.8
[RFC 3633],Section 9,10 and 12.1
</PRE>

=end html

=head1 SEE ALSO

=begin html
<PRE>
<BR>
  perldoc  V6evalTool
<BR>
</PRE>

=end html

